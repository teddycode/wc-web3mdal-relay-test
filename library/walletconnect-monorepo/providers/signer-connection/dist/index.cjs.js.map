{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import SignClient from \"@walletconnect/sign-client\";\r\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\r\nimport { formatJsonRpcError, formatJsonRpcResult } from \"@walletconnect/jsonrpc-utils\";\r\nimport { SignClientTypes, ISignClient, SessionTypes, ProposalTypes } from \"@walletconnect/types\";\r\nimport {\r\n  getSdkError,\r\n  getAccountsFromNamespaces,\r\n  getChainsFromNamespaces,\r\n  getChainsFromRequiredNamespaces,\r\n} from \"@walletconnect/utils\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nfunction isClient(opts?: SignerConnectionClientOpts): opts is SignClient {\r\n  return typeof opts !== \"undefined\" && typeof (opts as SignClient).context !== \"undefined\";\r\n}\r\n\r\nexport const SIGNER_EVENTS = {\r\n  init: \"signer_init\",\r\n  uri: \"signer_uri\",\r\n  created: \"signer_created\",\r\n  updated: \"signer_updated\",\r\n  deleted: \"signer_deleted\",\r\n  event: \"signer_event\",\r\n};\r\n\r\nexport type SignerConnectionClientOpts = ISignClient | SignClientTypes.Options;\r\nexport interface SignerConnectionOpts {\r\n  requiredNamespaces?: ProposalTypes.RequiredNamespaces;\r\n  client?: SignerConnectionClientOpts;\r\n}\r\n\r\nexport class SignerConnection extends IJsonRpcConnection {\r\n  public events: any = new EventEmitter();\r\n  public requiredNamespaces: ProposalTypes.RequiredNamespaces;\r\n\r\n  private pending = false;\r\n  private session: SessionTypes.Struct | undefined;\r\n  private opts: SignerConnectionClientOpts | undefined;\r\n  private client?: SignClient;\r\n  private initializing = false;\r\n\r\n  constructor(opts?: SignerConnectionOpts) {\r\n    super();\r\n    this.requiredNamespaces = opts?.requiredNamespaces || {};\r\n    this.opts = opts?.client;\r\n  }\r\n\r\n  get connected(): boolean {\r\n    return typeof this.session !== \"undefined\";\r\n  }\r\n\r\n  get connecting(): boolean {\r\n    return this.pending;\r\n  }\r\n\r\n  get chains() {\r\n    if (this.session) {\r\n      return getChainsFromNamespaces(this.session.namespaces);\r\n    }\r\n    return getChainsFromRequiredNamespaces(this.requiredNamespaces);\r\n  }\r\n\r\n  get accounts() {\r\n    if (this.session) {\r\n      return getAccountsFromNamespaces(this.session.namespaces);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  public on(event: string, listener: any) {\r\n    this.events.on(event, listener);\r\n  }\r\n\r\n  public once(event: string, listener: any) {\r\n    this.events.once(event, listener);\r\n  }\r\n\r\n  public off(event: string, listener: any) {\r\n    this.events.off(event, listener);\r\n  }\r\n\r\n  public removeListener(event: string, listener: any) {\r\n    this.events.removeListener(event, listener);\r\n  }\r\n\r\n  public async open(): Promise<void> {\r\n    if (this.pending) {\r\n      return new Promise((resolve, reject) => {\r\n        this.events.once(\"open\", () => {\r\n          this.events.once(\"open_error\", (error: any) => {\r\n            reject(error);\r\n          });\r\n          if (typeof this.client === \"undefined\") {\r\n            return reject(new Error(\"Sign Client not initialized\"));\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n\r\n    try {\r\n      this.pending = true;\r\n      const client = await this.register();\r\n      const compatible = client.find({\r\n        requiredNamespaces: this.requiredNamespaces,\r\n      });\r\n      if (compatible.length) return this.onOpen(compatible[0]);\r\n      const { uri, approval } = await client.connect({\r\n        requiredNamespaces: this.requiredNamespaces,\r\n      });\r\n      this.events.emit(SIGNER_EVENTS.uri, { uri });\r\n      this.session = await approval();\r\n      this.events.emit(SIGNER_EVENTS.created, this.session);\r\n      this.onOpen();\r\n    } catch (e) {\r\n      this.events.emit(\"open_error\", e);\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async close() {\r\n    if (typeof this.session === \"undefined\") {\r\n      return;\r\n    }\r\n    const client = await this.register();\r\n    await client.disconnect({\r\n      topic: this.session.topic,\r\n      reason: getSdkError(\"USER_DISCONNECTED\"),\r\n    });\r\n    this.onClose();\r\n  }\r\n\r\n  public async send(payload: any, context?: any) {\r\n    if (typeof this.client === \"undefined\") {\r\n      this.client = await this.register();\r\n      if (!this.connected) await this.open();\r\n    }\r\n    if (typeof this.session === \"undefined\") {\r\n      throw new Error(\"Signer connection is missing session\");\r\n    }\r\n    this.client\r\n      .request({ topic: this.session.topic, request: payload, chainId: context?.chainId })\r\n      .then((result: any) => this.events.emit(\"payload\", formatJsonRpcResult(payload.id, result)))\r\n      .catch((e: any) => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\r\n  }\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async register(\r\n    opts: SignerConnectionClientOpts | undefined = this.opts,\r\n  ): Promise<SignClient> {\r\n    if (typeof this.client !== \"undefined\") {\r\n      return this.client;\r\n    }\r\n\r\n    if (this.initializing) {\r\n      return new Promise((resolve, reject) => {\r\n        this.events.once(\"register_error\", (error: any) => {\r\n          reject(error);\r\n        });\r\n        this.events.once(SIGNER_EVENTS.init, () => {\r\n          if (typeof this.client === \"undefined\") {\r\n            return reject(new Error(\"Sign Client not initialized\"));\r\n          }\r\n          resolve(this.client);\r\n        });\r\n      });\r\n    }\r\n    if (isClient(opts)) {\r\n      this.client = opts;\r\n      this.registerEventListeners();\r\n      return this.client;\r\n    }\r\n    try {\r\n      this.initializing = true;\r\n      this.client = await SignClient.init(opts);\r\n      this.initializing = false;\r\n      this.registerEventListeners();\r\n      this.events.emit(SIGNER_EVENTS.init);\r\n      return this.client;\r\n    } catch (e) {\r\n      this.events.emit(\"register_error\", e);\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  private onOpen(session?: SessionTypes.Struct) {\r\n    this.pending = false;\r\n    if (session) {\r\n      this.session = session;\r\n    }\r\n    this.events.emit(\"open\");\r\n  }\r\n\r\n  private onClose() {\r\n    this.pending = false;\r\n    if (this.client) {\r\n      this.client = undefined;\r\n    }\r\n    this.events.emit(\"close\");\r\n  }\r\n\r\n  private registerEventListeners() {\r\n    if (typeof this.client === \"undefined\") return;\r\n    this.client.on(\"session_event\", (args: SignClientTypes.EventArguments[\"session_event\"]) => {\r\n      if (this.session && this.session?.topic !== args.topic) return;\r\n      this.events.emit(SIGNER_EVENTS.event, args.params);\r\n    });\r\n    this.client.on(\"session_update\", (args: SignClientTypes.EventArguments[\"session_update\"]) => {\r\n      if (typeof this.client === \"undefined\") return;\r\n      if (this.session && this.session?.topic !== args.topic) return;\r\n      this.session = this.client.session.get(args.topic);\r\n      this.events.emit(SIGNER_EVENTS.updated, this.session);\r\n    });\r\n    this.client.on(\"session_delete\", (args: SignClientTypes.EventArguments[\"session_delete\"]) => {\r\n      if (!this.session) return;\r\n      if (this.session && this.session?.topic !== args.topic) return;\r\n      this.onClose();\r\n      this.events.emit(SIGNER_EVENTS.deleted, this.session);\r\n      this.session = undefined;\r\n    });\r\n  }\r\n}\r\n\r\nexport default SignerConnection;\r\n"],"names":["isClient","opts","IJsonRpcConnection","EventEmitter","getChainsFromNamespaces","getChainsFromRequiredNamespaces","getAccountsFromNamespaces","event","listener","resolve","reject","error","client","compatible","uri","approval","getSdkError","payload","context","result","formatJsonRpcResult","e","formatJsonRpcError","SignClient","session","args","_a"],"mappings":"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"}