{"version":3,"file":"index.cjs.js","sources":["../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../../../node_modules/uint8arrays/esm/src/alloc.js","../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../node_modules/uint8arrays/esm/src/from-string.js","../src/constants/core.ts","../src/constants/crypto.ts","../src/constants/keychain.ts","../src/constants/messages.ts","../src/constants/publisher.ts","../src/constants/relayer.ts","../src/constants/store.ts","../src/constants/subscriber.ts","../src/constants/pairing.ts","../src/constants/history.ts","../src/constants/expirer.ts","../src/constants/verify.ts","../src/constants/echo.ts","../src/controllers/keychain.ts","../src/controllers/crypto.ts","../src/controllers/messages.ts","../src/controllers/publisher.ts","../src/controllers/topicmap.ts","../src/controllers/subscriber.ts","../src/controllers/relayer.ts","../src/controllers/store.ts","../src/controllers/pairing.ts","../src/controllers/history.ts","../src/controllers/expirer.ts","../src/controllers/verify.ts","../src/controllers/echo.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","export const CORE_PROTOCOL = \"wc\";\r\nexport const CORE_VERSION = 2;\r\nexport const CORE_CONTEXT = \"core\";\r\n\r\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\r\n\r\nexport const CORE_DEFAULT = {\r\n  name: CORE_CONTEXT,\r\n  logger: \"error\",\r\n};\r\n\r\nexport const CORE_STORAGE_OPTIONS = {\r\n  database: \":memory:\",\r\n};\r\n","import { ONE_DAY } from \"@walletconnect/time\";\r\n\r\nexport const CRYPTO_CONTEXT = \"crypto\";\r\n\r\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\r\n\r\nexport const CRYPTO_JWT_TTL = ONE_DAY;\r\n","export const KEYCHAIN_CONTEXT = \"keychain\";\r\n\r\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\r\n","export const MESSAGES_CONTEXT = \"messages\";\r\n\r\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\r\n","import { SIX_HOURS } from \"@walletconnect/time\";\r\n\r\nexport const PUBLISHER_DEFAULT_TTL = SIX_HOURS;\r\n\r\nexport const PUBLISHER_CONTEXT = \"publisher\";\r\n","export const RELAYER_DEFAULT_PROTOCOL = \"irn\";\r\n\r\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\r\n\r\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.org\";\r\nexport const RELAYER_FALLBACK_RELAY_URL = \"wss://relay.buaadcl.tech:15566\";\r\n\r\nexport const RELAYER_CONTEXT = \"relayer\";\r\n\r\nexport const RELAYER_EVENTS = {\r\n  message: \"relayer_message\",\r\n  message_ack: \"relayer_message_ack\",\r\n  connect: \"relayer_connect\",\r\n  disconnect: \"relayer_disconnect\",\r\n  error: \"relayer_error\",\r\n  connection_stalled: \"relayer_connection_stalled\",\r\n  transport_closed: \"relayer_transport_closed\",\r\n  publish: \"relayer_publish\",\r\n};\r\n\r\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\r\n\r\nexport const RELAYER_PROVIDER_EVENTS = {\r\n  payload: \"payload\",\r\n  connect: \"connect\",\r\n  disconnect: \"disconnect\",\r\n  error: \"error\",\r\n};\r\n\r\nexport const RELAYER_RECONNECT_TIMEOUT = 0.1;\r\n\r\nexport const RELAYER_STORAGE_OPTIONS = {\r\n  database: \":memory:\",\r\n};\r\n\r\n// Updated automatically via `new-version` npm script.\r\n\r\nexport const RELAYER_SDK_VERSION = \"2.14.0\";\r\n\r\n// delay to wait before closing the transport connection after init if not active\r\nexport const RELAYER_TRANSPORT_CUTOFF = 10_000;\r\n","export const STORE_STORAGE_VERSION = \"0.3\";\r\n\r\nexport const WALLETCONNECT_CLIENT_ID = \"WALLETCONNECT_CLIENT_ID\";\r\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\r\n\r\nexport const SUBSCRIBER_EVENTS = {\r\n  created: \"subscription_created\",\r\n  deleted: \"subscription_deleted\",\r\n  expired: \"subscription_expired\",\r\n  disabled: \"subscription_disabled\",\r\n  sync: \"subscription_sync\",\r\n  resubscribed: \"subscription_resubscribed\",\r\n};\r\n\r\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\r\n\r\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\r\n\r\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\r\n\r\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\r\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\r\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\r\n\r\nexport const PAIRING_CONTEXT = \"pairing\";\r\n\r\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\r\n\r\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\r\n\r\nexport const PAIRING_RPC_OPTS: Record<\r\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\r\n  {\r\n    req: RelayerTypes.PublishOptions;\r\n    res: RelayerTypes.PublishOptions;\r\n  }\r\n> = {\r\n  wc_pairingDelete: {\r\n    req: {\r\n      ttl: ONE_DAY,\r\n      prompt: false,\r\n      tag: 1000,\r\n    },\r\n    res: {\r\n      ttl: ONE_DAY,\r\n      prompt: false,\r\n      tag: 1001,\r\n    },\r\n  },\r\n  wc_pairingPing: {\r\n    req: {\r\n      ttl: THIRTY_SECONDS,\r\n      prompt: false,\r\n      tag: 1002,\r\n    },\r\n    res: {\r\n      ttl: THIRTY_SECONDS,\r\n      prompt: false,\r\n      tag: 1003,\r\n    },\r\n  },\r\n  unregistered_method: {\r\n    req: {\r\n      ttl: ONE_DAY,\r\n      prompt: false,\r\n      tag: 0,\r\n    },\r\n    res: {\r\n      ttl: ONE_DAY,\r\n      prompt: false,\r\n      tag: 0,\r\n    },\r\n  },\r\n};\r\n\r\nexport const PAIRING_EVENTS = {\r\n  create: \"pairing_create\",\r\n  expire: \"pairing_expire\",\r\n  delete: \"pairing_delete\",\r\n  ping: \"pairing_ping\",\r\n};\r\n","export const HISTORY_EVENTS = {\r\n  created: \"history_created\",\r\n  updated: \"history_updated\",\r\n  deleted: \"history_deleted\",\r\n  sync: \"history_sync\",\r\n};\r\n\r\nexport const HISTORY_CONTEXT = \"history\";\r\n\r\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\r\n","import { ONE_DAY } from \"@walletconnect/time\";\r\n\r\nexport const EXPIRER_CONTEXT = \"expirer\";\r\n\r\nexport const EXPIRER_EVENTS = {\r\n  created: \"expirer_created\",\r\n  deleted: \"expirer_deleted\",\r\n  expired: \"expirer_expired\",\r\n  sync: \"expirer_sync\",\r\n};\r\n\r\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\r\n\r\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\r\n","export const VERIFY_CONTEXT = \"verify-api\";\r\n\r\nconst VERIFY_SERVER_COM = \"https://verify.walletconnect.com\";\r\nconst VERIFY_SERVER_ORG = \"https://verify.walletconnect.org\";\r\nexport const VERIFY_SERVER = VERIFY_SERVER_ORG;\r\n\r\nexport const TRUSTED_VERIFY_URLS = [VERIFY_SERVER_COM, VERIFY_SERVER_ORG];\r\n","export const ECHO_CONTEXT = \"echo\";\r\n\r\nexport const ECHO_URL = \"https://echo.walletconnect.com\";\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { ICore, IKeyChain } from \"@walletconnect/types\";\r\nimport { getInternalError, mapToObj, objToMap } from \"@walletconnect/utils\";\r\n\r\nimport { CORE_STORAGE_PREFIX, KEYCHAIN_CONTEXT, KEYCHAIN_STORAGE_VERSION } from \"../constants\";\r\n\r\nexport class KeyChain implements IKeyChain {\r\n  public keychain = new Map<string, string>();\r\n  public name = KEYCHAIN_CONTEXT;\r\n  public version = KEYCHAIN_STORAGE_VERSION;\r\n\r\n  private initialized = false;\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n\r\n  constructor(public core: ICore, public logger: Logger) {\r\n    this.core = core;\r\n    this.logger = generateChildLogger(logger, this.name);\r\n  }\r\n\r\n  public init: IKeyChain[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      const keychain = await this.getKeyChain();\r\n      if (typeof keychain !== \"undefined\") {\r\n        this.keychain = keychain;\r\n      }\r\n      this.initialized = true;\r\n    }\r\n  };\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\r\n  }\r\n\r\n  public has: IKeyChain[\"has\"] = (tag) => {\r\n    this.isInitialized();\r\n    return this.keychain.has(tag);\r\n  };\r\n\r\n  public set: IKeyChain[\"set\"] = async (tag, key) => {\r\n    this.isInitialized();\r\n    this.keychain.set(tag, key);\r\n    await this.persist();\r\n  };\r\n\r\n  public get: IKeyChain[\"get\"] = (tag) => {\r\n    this.isInitialized();\r\n    const key = this.keychain.get(tag);\r\n    if (typeof key === \"undefined\") {\r\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${tag}`);\r\n      throw new Error(message);\r\n    }\r\n    return key;\r\n  };\r\n\r\n  public del: IKeyChain[\"del\"] = async (tag) => {\r\n    this.isInitialized();\r\n    this.keychain.delete(tag);\r\n    await this.persist();\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async setKeyChain(keychain: Map<string, string>) {\r\n    await this.core.storage.setItem<Record<string, string>>(this.storageKey, mapToObj(keychain));\r\n  }\r\n\r\n  private async getKeyChain() {\r\n    const keychain = await this.core.storage.getItem<Record<string, string>>(this.storageKey);\r\n    return typeof keychain !== \"undefined\" ? objToMap(keychain) : undefined;\r\n  }\r\n\r\n  private async persist() {\r\n    await this.setKeyChain(this.keychain);\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\r\nimport { ICore, ICrypto, IKeyChain } from \"@walletconnect/types\";\r\nimport * as relayAuth from \"@walletconnect/relay-auth\";\r\nimport { fromString } from \"uint8arrays/from-string\";\r\nimport {\r\n  decrypt,\r\n  deriveSymKey,\r\n  encrypt,\r\n  generateKeyPair as generateKeyPairUtil,\r\n  hashKey,\r\n  getInternalError,\r\n  generateRandomBytes32,\r\n  validateEncoding,\r\n  validateDecoding,\r\n  isTypeOneEnvelope,\r\n  deserialize,\r\n  decodeTypeByte,\r\n  BASE16,\r\n} from \"@walletconnect/utils\";\r\nimport { toString } from \"uint8arrays\";\r\n\r\nimport { CRYPTO_CONTEXT, CRYPTO_CLIENT_SEED, CRYPTO_JWT_TTL } from \"../constants\";\r\nimport { KeyChain } from \"./keychain\";\r\n\r\nexport class Crypto implements ICrypto {\r\n  public name = CRYPTO_CONTEXT;\r\n  public keychain: ICrypto[\"keychain\"];\r\n  public readonly randomSessionIdentifier = generateRandomBytes32();\r\n\r\n  private initialized = false;\r\n\r\n  constructor(public core: ICore, public logger: Logger, keychain?: IKeyChain) {\r\n    this.core = core;\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.keychain = keychain || new KeyChain(this.core, this.logger);\r\n  }\r\n\r\n  public init: ICrypto[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      await this.keychain.init();\r\n      this.initialized = true;\r\n    }\r\n  };\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  public hasKeys: ICrypto[\"hasKeys\"] = (tag) => {\r\n    this.isInitialized();\r\n    return this.keychain.has(tag);\r\n  };\r\n\r\n  public getClientId: ICrypto[\"getClientId\"] = async () => {\r\n    this.isInitialized();\r\n    const seed = await this.getClientSeed();\r\n    const keyPair = relayAuth.generateKeyPair(seed);\r\n    const clientId = relayAuth.encodeIss(keyPair.publicKey);\r\n    return clientId;\r\n  };\r\n\r\n  public generateKeyPair: ICrypto[\"generateKeyPair\"] = () => {\r\n    this.isInitialized();\r\n    const keyPair = generateKeyPairUtil();\r\n    return this.setPrivateKey(keyPair.publicKey, keyPair.privateKey);\r\n  };\r\n\r\n  public signJWT: ICrypto[\"signJWT\"] = async (aud) => {\r\n    this.isInitialized();\r\n    const seed = await this.getClientSeed();\r\n    const keyPair = relayAuth.generateKeyPair(seed);\r\n    const sub = this.randomSessionIdentifier;\r\n    const ttl = CRYPTO_JWT_TTL;\r\n    const jwt = await relayAuth.signJWT(sub, aud, ttl, keyPair);\r\n    return jwt;\r\n  };\r\n\r\n  public generateSharedKey: ICrypto[\"generateSharedKey\"] = (\r\n    selfPublicKey,\r\n    peerPublicKey,\r\n    overrideTopic,\r\n  ) => {\r\n    this.isInitialized();\r\n    const selfPrivateKey = this.getPrivateKey(selfPublicKey);\r\n    const symKey = deriveSymKey(selfPrivateKey, peerPublicKey);\r\n    return this.setSymKey(symKey, overrideTopic);\r\n  };\r\n\r\n  public setSymKey: ICrypto[\"setSymKey\"] = async (symKey, overrideTopic) => {\r\n    this.isInitialized();\r\n    const topic = overrideTopic || hashKey(symKey);\r\n    await this.keychain.set(topic, symKey);\r\n    return topic;\r\n  };\r\n\r\n  public deleteKeyPair: ICrypto[\"deleteKeyPair\"] = async (publicKey: string) => {\r\n    this.isInitialized();\r\n    await this.keychain.del(publicKey);\r\n  };\r\n\r\n  public deleteSymKey: ICrypto[\"deleteSymKey\"] = async (topic: string) => {\r\n    this.isInitialized();\r\n    await this.keychain.del(topic);\r\n  };\r\n\r\n  public encode: ICrypto[\"encode\"] = async (topic, payload, opts) => {\r\n    this.isInitialized();\r\n    const params = validateEncoding(opts);\r\n    const message = safeJsonStringify(payload);\r\n    if (isTypeOneEnvelope(params)) {\r\n      const selfPublicKey = params.senderPublicKey;\r\n      const peerPublicKey = params.receiverPublicKey;\r\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\r\n    }\r\n    const symKey = this.getSymKey(topic);\r\n    const { type, senderPublicKey } = params;\r\n    const result = encrypt({ type, symKey, message, senderPublicKey });\r\n    return result;\r\n  };\r\n\r\n  public decode: ICrypto[\"decode\"] = async (topic, encoded, opts) => {\r\n    this.isInitialized();\r\n    const params = validateDecoding(encoded, opts);\r\n    if (isTypeOneEnvelope(params)) {\r\n      const selfPublicKey = params.receiverPublicKey;\r\n      const peerPublicKey = params.senderPublicKey;\r\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\r\n    }\r\n    try {\r\n      const symKey = this.getSymKey(topic);\r\n      const message = decrypt({ symKey, encoded });\r\n      const payload = safeJsonParse(message);\r\n      return payload;\r\n    } catch (error) {\r\n      this.logger.error(\r\n        `Failed to decode message from topic: '${topic}', clientId: '${await this.getClientId()}'`,\r\n      );\r\n      this.logger.error(error);\r\n    }\r\n  };\r\n\r\n  public getPayloadType: ICrypto[\"getPayloadType\"] = (encoded) => {\r\n    const deserialized = deserialize(encoded);\r\n    return decodeTypeByte(deserialized.type);\r\n  };\r\n\r\n  public getPayloadSenderPublicKey: ICrypto[\"getPayloadSenderPublicKey\"] = (encoded) => {\r\n    const deserialized = deserialize(encoded);\r\n    return deserialized.senderPublicKey\r\n      ? toString(deserialized.senderPublicKey, BASE16)\r\n      : undefined;\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async setPrivateKey(publicKey: string, privateKey: string): Promise<string> {\r\n    await this.keychain.set(publicKey, privateKey);\r\n    return publicKey;\r\n  }\r\n\r\n  private getPrivateKey(publicKey: string) {\r\n    const privateKey = this.keychain.get(publicKey);\r\n    return privateKey;\r\n  }\r\n\r\n  private async getClientSeed(): Promise<Uint8Array> {\r\n    let seed = \"\";\r\n    try {\r\n      seed = this.keychain.get(CRYPTO_CLIENT_SEED);\r\n    } catch {\r\n      seed = generateRandomBytes32();\r\n      await this.keychain.set(CRYPTO_CLIENT_SEED, seed);\r\n    }\r\n    return fromString(seed, \"base16\");\r\n  }\r\n\r\n  private getSymKey(topic: string) {\r\n    const symKey = this.keychain.get(topic);\r\n    return symKey;\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { ICore, IMessageTracker, MessageRecord } from \"@walletconnect/types\";\r\nimport { hashMessage, mapToObj, objToMap, getInternalError } from \"@walletconnect/utils\";\r\nimport { CORE_STORAGE_PREFIX, MESSAGES_CONTEXT, MESSAGES_STORAGE_VERSION } from \"../constants\";\r\n\r\nexport class MessageTracker extends IMessageTracker {\r\n  public messages = new Map<string, MessageRecord>();\r\n  public name = MESSAGES_CONTEXT;\r\n  public version = MESSAGES_STORAGE_VERSION;\r\n\r\n  private initialized = false;\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n\r\n  constructor(public logger: Logger, public core: ICore) {\r\n    super(logger, core);\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.core = core;\r\n  }\r\n\r\n  public init: IMessageTracker[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      this.logger.trace(`Initialized`);\r\n      try {\r\n        const messages = await this.getRelayerMessages();\r\n        if (typeof messages !== \"undefined\") {\r\n          this.messages = messages;\r\n        }\r\n\r\n        this.logger.debug(`Successfully Restored records for ${this.name}`);\r\n        this.logger.trace({ type: \"method\", method: \"restore\", size: this.messages.size });\r\n      } catch (e) {\r\n        this.logger.debug(`Failed to Restore records for ${this.name}`);\r\n        this.logger.error(e as any);\r\n      } finally {\r\n        this.initialized = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  get context(): string {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\r\n  }\r\n\r\n  public set: IMessageTracker[\"set\"] = async (topic, message) => {\r\n    this.isInitialized();\r\n    const hash = hashMessage(message);\r\n    let messages = this.messages.get(topic);\r\n    if (typeof messages === \"undefined\") {\r\n      messages = {};\r\n    }\r\n    if (typeof messages[hash] !== \"undefined\") {\r\n      return hash;\r\n    }\r\n    messages[hash] = message;\r\n    this.messages.set(topic, messages);\r\n    await this.persist();\r\n    return hash;\r\n  };\r\n\r\n  public get: IMessageTracker[\"get\"] = (topic) => {\r\n    this.isInitialized();\r\n    let messages = this.messages.get(topic);\r\n    if (typeof messages === \"undefined\") {\r\n      messages = {};\r\n    }\r\n    return messages;\r\n  };\r\n\r\n  public has: IMessageTracker[\"has\"] = (topic, message) => {\r\n    this.isInitialized();\r\n    const messages = this.get(topic);\r\n    const hash = hashMessage(message);\r\n    return typeof messages[hash] !== \"undefined\";\r\n  };\r\n\r\n  public del: IMessageTracker[\"del\"] = async (topic) => {\r\n    this.isInitialized();\r\n    this.messages.delete(topic);\r\n    await this.persist();\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async setRelayerMessages(messages: Map<string, MessageRecord>): Promise<void> {\r\n    await this.core.storage.setItem<Record<string, MessageRecord>>(\r\n      this.storageKey,\r\n      mapToObj(messages),\r\n    );\r\n  }\r\n\r\n  private async getRelayerMessages(): Promise<Map<string, MessageRecord> | undefined> {\r\n    const messages = await this.core.storage.getItem<Record<string, MessageRecord>>(\r\n      this.storageKey,\r\n    );\r\n    return typeof messages !== \"undefined\" ? objToMap(messages) : undefined;\r\n  }\r\n\r\n  private async persist() {\r\n    await this.setRelayerMessages(this.messages);\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\r\nimport { JsonRpcPayload, RequestArguments } from \"@walletconnect/jsonrpc-types\";\r\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\r\nimport { IPublisher, IRelayer, PublisherTypes, RelayerTypes } from \"@walletconnect/types\";\r\nimport {\r\n  getRelayProtocolApi,\r\n  getRelayProtocolName,\r\n  isUndefined,\r\n  createExpiringPromise,\r\n} from \"@walletconnect/utils\";\r\nimport { EventEmitter } from \"events\";\r\n\r\nimport { PUBLISHER_CONTEXT, PUBLISHER_DEFAULT_TTL, RELAYER_EVENTS } from \"../constants\";\r\nimport { getBigIntRpcId } from \"@walletconnect/jsonrpc-utils\";\r\nimport { ONE_MINUTE, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\r\n\r\nexport class Publisher extends IPublisher {\r\n  public events = new EventEmitter();\r\n  public name = PUBLISHER_CONTEXT;\r\n  public queue = new Map<string, PublisherTypes.Params>();\r\n\r\n  private publishTimeout = toMiliseconds(ONE_MINUTE);\r\n  private failedPublishTimeout = toMiliseconds(ONE_SECOND);\r\n  private needsTransportRestart = false;\r\n\r\n  constructor(public relayer: IRelayer, public logger: Logger) {\r\n    super(relayer, logger);\r\n    this.relayer = relayer;\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.registerEventListeners();\r\n  }\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  public publish: IPublisher[\"publish\"] = async (topic, message, opts) => {\r\n    this.logger.debug(`Publishing Payload`);\r\n    this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\r\n\r\n    const ttl = opts?.ttl || PUBLISHER_DEFAULT_TTL;\r\n    const relay = getRelayProtocolName(opts);\r\n    const prompt = opts?.prompt || false;\r\n    const tag = opts?.tag || 0;\r\n    const id = opts?.id || (getBigIntRpcId().toString() as any);\r\n    const params = { topic, message, opts: { ttl, relay, prompt, tag, id } };\r\n    const failedPublishMessage = `Failed to publish payload, please try again. id:${id} tag:${tag}`;\r\n    const startPublish = Date.now();\r\n    let result;\r\n    let attempts = 1;\r\n\r\n    try {\r\n      /**\r\n       * Loop until the publish is successful or the timeout is reached\r\n       * The loop allows to retry to retry the publish in case of disconnect\r\n       */\r\n      while (result === undefined) {\r\n        // Terminate the publishing attempts if publisTimeout has been exceeded\r\n        if (Date.now() - startPublish > this.publishTimeout) {\r\n          throw new Error(failedPublishMessage);\r\n        }\r\n\r\n        this.logger.trace({ id, attempts }, `publisher.publish - attempt ${attempts}`);\r\n        const publish = await createExpiringPromise(\r\n          this.rpcPublish(topic, message, ttl, relay, prompt, tag, id).catch((e) =>\r\n            this.logger.warn(e),\r\n          ),\r\n          this.publishTimeout,\r\n          failedPublishMessage,\r\n        );\r\n        result = await publish;\r\n        attempts++;\r\n\r\n        if (!result) {\r\n          // small delay before retrying so we can limit retry to max 1 time per second\r\n          // if network is down `rpcPublish` will throw immediately\r\n          await new Promise((resolve) => setTimeout(resolve, this.failedPublishTimeout));\r\n        }\r\n      }\r\n      this.relayer.events.emit(RELAYER_EVENTS.publish, params);\r\n      this.logger.debug(`Successfully Published Payload`);\r\n      this.logger.trace({\r\n        type: \"method\",\r\n        method: \"publish\",\r\n        params: { id, topic, message, opts },\r\n      });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Publish Payload`);\r\n      this.logger.error(e as any);\r\n      if (opts?.internal?.throwOnFailedPublish) {\r\n        throw e;\r\n      }\r\n      this.queue.set(id, params);\r\n    }\r\n  };\r\n\r\n  public on: IPublisher[\"on\"] = (event, listener) => {\r\n    this.events.on(event, listener);\r\n  };\r\n\r\n  public once: IPublisher[\"once\"] = (event, listener) => {\r\n    this.events.once(event, listener);\r\n  };\r\n\r\n  public off: IPublisher[\"off\"] = (event, listener) => {\r\n    this.events.off(event, listener);\r\n  };\r\n\r\n  public removeListener: IPublisher[\"removeListener\"] = (event, listener) => {\r\n    this.events.removeListener(event, listener);\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private rpcPublish(\r\n    topic: string,\r\n    message: string,\r\n    ttl: number,\r\n    relay: RelayerTypes.ProtocolOptions,\r\n    prompt?: boolean,\r\n    tag?: number,\r\n    id?: number,\r\n  ) {\r\n    const api = getRelayProtocolApi(relay.protocol);\r\n    const request: RequestArguments<RelayJsonRpc.PublishParams> = {\r\n      method: api.publish,\r\n      params: {\r\n        topic,\r\n        message,\r\n        ttl,\r\n        prompt,\r\n        tag,\r\n      },\r\n      id,\r\n    };\r\n    if (isUndefined(request.params?.prompt)) delete request.params?.prompt;\r\n    if (isUndefined(request.params?.tag)) delete request.params?.tag;\r\n    this.logger.debug(`Outgoing Relay Payload`);\r\n    this.logger.trace({ type: \"message\", direction: \"outgoing\", request });\r\n    return this.relayer.request(request);\r\n  }\r\n\r\n  private removeRequestFromQueue(id: string) {\r\n    this.queue.delete(id);\r\n  }\r\n\r\n  private checkQueue() {\r\n    this.queue.forEach(async (params) => {\r\n      const { topic, message, opts } = params;\r\n      await this.publish(topic, message, opts);\r\n    });\r\n  }\r\n\r\n  private registerEventListeners() {\r\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\r\n      // restart the transport if needed\r\n      // queue will be processed on the next pulse\r\n      if (this.needsTransportRestart) {\r\n        this.needsTransportRestart = false;\r\n        this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\r\n        return;\r\n      }\r\n      this.checkQueue();\r\n    });\r\n    this.relayer.on(RELAYER_EVENTS.message_ack, (event: JsonRpcPayload) => {\r\n      this.removeRequestFromQueue(event.id.toString());\r\n    });\r\n  }\r\n}\r\n","import { ISubscriberTopicMap } from \"@walletconnect/types\";\r\n\r\nexport class SubscriberTopicMap implements ISubscriberTopicMap {\r\n  public map = new Map<string, string[]>();\r\n\r\n  get topics(): string[] {\r\n    return Array.from(this.map.keys());\r\n  }\r\n\r\n  public set: ISubscriberTopicMap[\"set\"] = (topic, id) => {\r\n    const ids = this.get(topic);\r\n    if (this.exists(topic, id)) return;\r\n    this.map.set(topic, [...ids, id]);\r\n  };\r\n\r\n  public get: ISubscriberTopicMap[\"get\"] = (topic) => {\r\n    const ids = this.map.get(topic);\r\n    return ids || [];\r\n  };\r\n\r\n  public exists: ISubscriberTopicMap[\"exists\"] = (topic, id) => {\r\n    const ids = this.get(topic);\r\n    return ids.includes(id);\r\n  };\r\n\r\n  public delete: ISubscriberTopicMap[\"delete\"] = (topic, id) => {\r\n    if (typeof id === \"undefined\") {\r\n      this.map.delete(topic);\r\n      return;\r\n    }\r\n    if (!this.map.has(topic)) return;\r\n    const ids = this.get(topic);\r\n    if (!this.exists(topic, id)) return;\r\n    const remaining = ids.filter((x) => x !== id);\r\n    if (!remaining.length) {\r\n      this.map.delete(topic);\r\n      return;\r\n    }\r\n    this.map.set(topic, remaining);\r\n  };\r\n\r\n  public clear: ISubscriberTopicMap[\"clear\"] = () => {\r\n    this.map.clear();\r\n  };\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\r\nimport { ErrorResponse, RequestArguments } from \"@walletconnect/jsonrpc-types\";\r\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\r\nimport { ONE_MINUTE, Watch, toMiliseconds } from \"@walletconnect/time\";\r\nimport {\r\n  IRelayer,\r\n  ISubscriber,\r\n  RelayerTypes,\r\n  SubscriberEvents,\r\n  SubscriberTypes,\r\n} from \"@walletconnect/types\";\r\nimport {\r\n  getSdkError,\r\n  getInternalError,\r\n  getRelayProtocolApi,\r\n  getRelayProtocolName,\r\n  createExpiringPromise,\r\n  hashMessage,\r\n  isValidArray,\r\n} from \"@walletconnect/utils\";\r\nimport {\r\n  CORE_STORAGE_PREFIX,\r\n  SUBSCRIBER_CONTEXT,\r\n  SUBSCRIBER_EVENTS,\r\n  SUBSCRIBER_STORAGE_VERSION,\r\n  PENDING_SUB_RESOLUTION_TIMEOUT,\r\n  RELAYER_EVENTS,\r\n} from \"../constants\";\r\nimport { SubscriberTopicMap } from \"./topicmap\";\r\n\r\nexport class Subscriber extends ISubscriber {\r\n  public subscriptions = new Map<string, SubscriberTypes.Active>();\r\n  public topicMap = new SubscriberTopicMap();\r\n  public events = new EventEmitter();\r\n  public name = SUBSCRIBER_CONTEXT;\r\n  public version = SUBSCRIBER_STORAGE_VERSION;\r\n  public pending = new Map<string, SubscriberTypes.Params>();\r\n\r\n  private cached: SubscriberTypes.Active[] = [];\r\n  private initialized = false;\r\n  private pendingSubscriptionWatchLabel = \"pending_sub_watch_label\";\r\n  private pollingInterval = 20;\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n  private subscribeTimeout = toMiliseconds(ONE_MINUTE);\r\n  private restartInProgress = false;\r\n  private clientId: string;\r\n  private batchSubscribeTopicsLimit = 500;\r\n  private pendingBatchMessages: RelayerTypes.MessageEvent[] = [];\r\n\r\n  constructor(public relayer: IRelayer, public logger: Logger) {\r\n    super(relayer, logger);\r\n    this.relayer = relayer;\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.clientId = \"\"; // assigned in init\r\n  }\r\n\r\n  public init: ISubscriber[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      this.logger.trace(`Initialized`);\r\n      this.registerEventListeners();\r\n      this.clientId = await this.relayer.core.crypto.getClientId();\r\n    }\r\n  };\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return (\r\n      this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name\r\n    );\r\n  }\r\n\r\n  get length() {\r\n    return this.subscriptions.size;\r\n  }\r\n\r\n  get ids() {\r\n    return Array.from(this.subscriptions.keys());\r\n  }\r\n\r\n  get values() {\r\n    return Array.from(this.subscriptions.values());\r\n  }\r\n\r\n  get topics() {\r\n    return this.topicMap.topics;\r\n  }\r\n\r\n  public subscribe: ISubscriber[\"subscribe\"] = async (topic, opts) => {\r\n    await this.restartToComplete();\r\n    this.isInitialized();\r\n    this.logger.debug(`Subscribing Topic`);\r\n    this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\r\n    try {\r\n      const relay = getRelayProtocolName(opts);\r\n      const params = { topic, relay };\r\n      this.pending.set(topic, params);\r\n      const id = await this.rpcSubscribe(topic, relay);\r\n      if (typeof id === \"string\") {\r\n        this.onSubscribe(id, params);\r\n        this.logger.debug(`Successfully Subscribed Topic`);\r\n        this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\r\n      }\r\n      return id;\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Subscribe Topic`);\r\n      this.logger.error(e as any);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  public unsubscribe: ISubscriber[\"unsubscribe\"] = async (topic, opts) => {\r\n    await this.restartToComplete();\r\n    this.isInitialized();\r\n    if (typeof opts?.id !== \"undefined\") {\r\n      await this.unsubscribeById(topic, opts.id, opts);\r\n    } else {\r\n      await this.unsubscribeByTopic(topic, opts);\r\n    }\r\n  };\r\n\r\n  public isSubscribed: ISubscriber[\"isSubscribed\"] = async (topic: string) => {\r\n    // topic subscription is already resolved\r\n    if (this.topics.includes(topic)) return true;\r\n    const label = `${this.pendingSubscriptionWatchLabel}_${topic}`;\r\n    // wait for the subscription to resolve\r\n    const exists = await new Promise<boolean>((resolve, reject) => {\r\n      const watch = new Watch();\r\n      watch.start(label);\r\n      const interval = setInterval(() => {\r\n        if (!this.pending.has(topic) && this.topics.includes(topic)) {\r\n          clearInterval(interval);\r\n          watch.stop(label);\r\n          resolve(true);\r\n        }\r\n        if (watch.elapsed(label) >= PENDING_SUB_RESOLUTION_TIMEOUT) {\r\n          clearInterval(interval);\r\n          watch.stop(label);\r\n          reject(new Error(\"Subscription resolution timeout\"));\r\n        }\r\n      }, this.pollingInterval);\r\n    }).catch(() => false);\r\n    return exists;\r\n  };\r\n\r\n  public on: ISubscriber[\"on\"] = (event, listener) => {\r\n    this.events.on(event, listener);\r\n  };\r\n\r\n  public once: ISubscriber[\"once\"] = (event, listener) => {\r\n    this.events.once(event, listener);\r\n  };\r\n\r\n  public off: ISubscriber[\"off\"] = (event, listener) => {\r\n    this.events.off(event, listener);\r\n  };\r\n\r\n  public removeListener: ISubscriber[\"removeListener\"] = (event, listener) => {\r\n    this.events.removeListener(event, listener);\r\n  };\r\n\r\n  public start: ISubscriber[\"start\"] = async () => {\r\n    await this.onConnect();\r\n  };\r\n\r\n  public stop: ISubscriber[\"stop\"] = async () => {\r\n    await this.onDisconnect();\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private hasSubscription(id: string, topic: string) {\r\n    let result = false;\r\n    try {\r\n      const subscription = this.getSubscription(id);\r\n      result = subscription.topic === topic;\r\n    } catch (e) {\r\n      // ignore error\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private onEnable() {\r\n    this.cached = [];\r\n    this.initialized = true;\r\n  }\r\n\r\n  private onDisable() {\r\n    this.cached = this.values;\r\n    this.subscriptions.clear();\r\n    this.topicMap.clear();\r\n  }\r\n\r\n  private async unsubscribeByTopic(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\r\n    const ids = this.topicMap.get(topic);\r\n    await Promise.all(ids.map(async (id) => await this.unsubscribeById(topic, id, opts)));\r\n  }\r\n\r\n  private async unsubscribeById(topic: string, id: string, opts?: RelayerTypes.UnsubscribeOptions) {\r\n    this.logger.debug(`Unsubscribing Topic`);\r\n    this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\r\n    try {\r\n      const relay = getRelayProtocolName(opts);\r\n      await this.rpcUnsubscribe(topic, id, relay);\r\n      const reason = getSdkError(\"USER_DISCONNECTED\", `${this.name}, ${topic}`);\r\n      await this.onUnsubscribe(topic, id, reason);\r\n      this.logger.debug(`Successfully Unsubscribed Topic`);\r\n      this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Unsubscribe Topic`);\r\n      this.logger.error(e as any);\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  private async rpcSubscribe(topic: string, relay: RelayerTypes.ProtocolOptions) {\r\n    const api = getRelayProtocolApi(relay.protocol);\r\n    const request: RequestArguments<RelayJsonRpc.SubscribeParams> = {\r\n      method: api.subscribe,\r\n      params: {\r\n        topic,\r\n      },\r\n    };\r\n    this.logger.debug(`Outgoing Relay Payload`);\r\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\r\n    try {\r\n      const subscribe = await createExpiringPromise(\r\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\r\n        this.subscribeTimeout,\r\n      );\r\n      const result = await subscribe;\r\n      // return null to indicate that the subscription failed\r\n      return result ? hashMessage(topic + this.clientId) : null;\r\n    } catch (err) {\r\n      this.logger.debug(`Outgoing Relay Subscribe Payload stalled`);\r\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private async rpcBatchSubscribe(subscriptions: SubscriberTypes.Params[]) {\r\n    if (!subscriptions.length) return;\r\n    const relay = subscriptions[0].relay;\r\n    const api = getRelayProtocolApi(relay.protocol);\r\n    const request: RequestArguments<RelayJsonRpc.BatchSubscribeParams> = {\r\n      method: api.batchSubscribe,\r\n      params: {\r\n        topics: subscriptions.map((s) => s.topic),\r\n      },\r\n    };\r\n    this.logger.debug(`Outgoing Relay Payload`);\r\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\r\n    try {\r\n      const subscribe = await createExpiringPromise(\r\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\r\n        this.subscribeTimeout,\r\n      );\r\n      return await subscribe;\r\n    } catch (err) {\r\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\r\n    }\r\n  }\r\n\r\n  private async rpcBatchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\r\n    if (!subscriptions.length) return;\r\n    const relay = subscriptions[0].relay;\r\n    const api = getRelayProtocolApi(relay.protocol);\r\n    const request: RequestArguments<RelayJsonRpc.BatchFetchMessagesParams> = {\r\n      method: api.batchFetchMessages,\r\n      params: {\r\n        topics: subscriptions.map((s) => s.topic),\r\n      },\r\n    };\r\n    this.logger.debug(`Outgoing Relay Payload`);\r\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\r\n    let result;\r\n    try {\r\n      const fetchMessagesPromise = await createExpiringPromise(\r\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\r\n        this.subscribeTimeout,\r\n      );\r\n      result = (await fetchMessagesPromise) as {\r\n        messages: RelayerTypes.MessageEvent[];\r\n      };\r\n    } catch (err) {\r\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private rpcUnsubscribe(topic: string, id: string, relay: RelayerTypes.ProtocolOptions) {\r\n    const api = getRelayProtocolApi(relay.protocol);\r\n    const request: RequestArguments<RelayJsonRpc.UnsubscribeParams> = {\r\n      method: api.unsubscribe,\r\n      params: {\r\n        topic,\r\n        id,\r\n      },\r\n    };\r\n    this.logger.debug(`Outgoing Relay Payload`);\r\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\r\n    return this.relayer.request(request);\r\n  }\r\n\r\n  private onSubscribe(id: string, params: SubscriberTypes.Params) {\r\n    this.setSubscription(id, { ...params, id });\r\n    this.pending.delete(params.topic);\r\n  }\r\n\r\n  private onBatchSubscribe(subscriptions: SubscriberTypes.Active[]) {\r\n    if (!subscriptions.length) return;\r\n    subscriptions.forEach((subscription) => {\r\n      this.setSubscription(subscription.id, { ...subscription });\r\n      this.pending.delete(subscription.topic);\r\n    });\r\n  }\r\n\r\n  private async onUnsubscribe(topic: string, id: string, reason: ErrorResponse) {\r\n    this.events.removeAllListeners(id);\r\n    if (this.hasSubscription(id, topic)) {\r\n      this.deleteSubscription(id, reason);\r\n    }\r\n    await this.relayer.messages.del(topic);\r\n  }\r\n\r\n  private async setRelayerSubscriptions(subscriptions: SubscriberTypes.Active[]) {\r\n    await this.relayer.core.storage.setItem<SubscriberTypes.Active[]>(\r\n      this.storageKey,\r\n      subscriptions,\r\n    );\r\n  }\r\n\r\n  private async getRelayerSubscriptions() {\r\n    const subscriptions = await this.relayer.core.storage.getItem<SubscriberTypes.Active[]>(\r\n      this.storageKey,\r\n    );\r\n    return subscriptions;\r\n  }\r\n\r\n  private setSubscription(id: string, subscription: SubscriberTypes.Active) {\r\n    this.logger.debug(`Setting subscription`);\r\n    this.logger.trace({ type: \"method\", method: \"setSubscription\", id, subscription });\r\n    this.addSubscription(id, subscription);\r\n  }\r\n\r\n  private addSubscription(id: string, subscription: SubscriberTypes.Active) {\r\n    this.subscriptions.set(id, { ...subscription });\r\n    this.topicMap.set(subscription.topic, id);\r\n    this.events.emit(SUBSCRIBER_EVENTS.created, subscription);\r\n  }\r\n\r\n  private getSubscription(id: string) {\r\n    this.logger.debug(`Getting subscription`);\r\n    this.logger.trace({ type: \"method\", method: \"getSubscription\", id });\r\n    const subscription = this.subscriptions.get(id);\r\n    if (!subscription) {\r\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\r\n      throw new Error(message);\r\n    }\r\n    return subscription;\r\n  }\r\n\r\n  private deleteSubscription(id: string, reason: ErrorResponse) {\r\n    this.logger.debug(`Deleting subscription`);\r\n    this.logger.trace({ type: \"method\", method: \"deleteSubscription\", id, reason });\r\n    const subscription = this.getSubscription(id);\r\n    this.subscriptions.delete(id);\r\n    this.topicMap.delete(subscription.topic, id);\r\n    this.events.emit(SUBSCRIBER_EVENTS.deleted, {\r\n      ...subscription,\r\n      reason,\r\n    } as SubscriberEvents.Deleted);\r\n  }\r\n\r\n  private restart = async () => {\r\n    this.restartInProgress = true;\r\n    await this.restore();\r\n    await this.reset();\r\n    this.restartInProgress = false;\r\n  };\r\n\r\n  private async persist() {\r\n    await this.setRelayerSubscriptions(this.values);\r\n    this.events.emit(SUBSCRIBER_EVENTS.sync);\r\n  }\r\n\r\n  private async reset() {\r\n    if (this.cached.length) {\r\n      const numOfBatches = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\r\n      for (let i = 0; i < numOfBatches; i++) {\r\n        const batch = this.cached.splice(0, this.batchSubscribeTopicsLimit);\r\n        await this.batchFetchMessages(batch);\r\n        await this.batchSubscribe(batch);\r\n      }\r\n    }\r\n    this.events.emit(SUBSCRIBER_EVENTS.resubscribed);\r\n  }\r\n\r\n  private async restore() {\r\n    try {\r\n      const persisted = await this.getRelayerSubscriptions();\r\n      if (typeof persisted === \"undefined\") return;\r\n      if (!persisted.length) return;\r\n      if (this.subscriptions.size) {\r\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\r\n        this.logger.error(message);\r\n        this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`);\r\n        throw new Error(message);\r\n      }\r\n      this.cached = persisted;\r\n      this.logger.debug(`Successfully Restored subscriptions for ${this.name}`);\r\n      this.logger.trace({ type: \"method\", method: \"restore\", subscriptions: this.values });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`);\r\n      this.logger.error(e as any);\r\n    }\r\n  }\r\n\r\n  private async batchSubscribe(subscriptions: SubscriberTypes.Params[]) {\r\n    if (!subscriptions.length) return;\r\n\r\n    const result = (await this.rpcBatchSubscribe(subscriptions)) as string[];\r\n    if (!isValidArray(result)) return;\r\n\r\n    this.onBatchSubscribe(result.map((id, i) => ({ ...subscriptions[i], id })));\r\n  }\r\n\r\n  private async batchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\r\n    if (!subscriptions.length) return;\r\n    this.logger.trace(`Fetching batch messages for ${subscriptions.length} subscriptions`);\r\n    const response = await this.rpcBatchFetchMessages(subscriptions);\r\n    if (response && response.messages) {\r\n      this.pendingBatchMessages = this.pendingBatchMessages.concat(response.messages);\r\n    }\r\n  }\r\n\r\n  private async onConnect() {\r\n    await this.restart();\r\n    this.onEnable();\r\n  }\r\n\r\n  private onDisconnect() {\r\n    this.onDisable();\r\n  }\r\n\r\n  private async checkPending() {\r\n    if (!this.initialized || !this.relayer.connected) return;\r\n\r\n    const pendingSubscriptions: SubscriberTypes.Params[] = [];\r\n    this.pending.forEach((params) => {\r\n      pendingSubscriptions.push(params);\r\n    });\r\n    await this.batchSubscribe(pendingSubscriptions);\r\n\r\n    if (this.pendingBatchMessages.length) {\r\n      await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages);\r\n      this.pendingBatchMessages = [];\r\n    }\r\n  }\r\n\r\n  private registerEventListeners() {\r\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, async () => {\r\n      await this.checkPending();\r\n    });\r\n    this.events.on(SUBSCRIBER_EVENTS.created, async (createdEvent: SubscriberEvents.Created) => {\r\n      const eventName = SUBSCRIBER_EVENTS.created;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\r\n      await this.persist();\r\n    });\r\n    this.events.on(SUBSCRIBER_EVENTS.deleted, async (deletedEvent: SubscriberEvents.Deleted) => {\r\n      const eventName = SUBSCRIBER_EVENTS.deleted;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\r\n      await this.persist();\r\n    });\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  private async restartToComplete() {\r\n    if (!this.restartInProgress) return;\r\n\r\n    await new Promise<void>((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (!this.restartInProgress) {\r\n          clearInterval(interval);\r\n          resolve();\r\n        }\r\n      }, this.pollingInterval);\r\n    });\r\n  }\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\r\nimport {\r\n  formatJsonRpcResult,\r\n  getBigIntRpcId,\r\n  IJsonRpcProvider,\r\n  isJsonRpcRequest,\r\n  isJsonRpcResponse,\r\n  JsonRpcPayload,\r\n  JsonRpcRequest,\r\n  RequestArguments,\r\n} from \"@walletconnect/jsonrpc-utils\";\r\nimport WsConnection from \"@walletconnect/jsonrpc-ws-connection\";\r\nimport {\r\n  generateChildLogger,\r\n  getDefaultLoggerOptions,\r\n  getLoggerContext,\r\n  pino,\r\n  Logger,\r\n} from \"@walletconnect/logger\";\r\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\r\nimport { ONE_MINUTE, ONE_SECOND, THIRTY_SECONDS, toMiliseconds } from \"@walletconnect/time\";\r\nimport {\r\n  ICore,\r\n  IMessageTracker,\r\n  IPublisher,\r\n  IRelayer,\r\n  ISubscriber,\r\n  RelayerOptions,\r\n  RelayerTypes,\r\n  SubscriberTypes,\r\n} from \"@walletconnect/types\";\r\nimport {\r\n  createExpiringPromise,\r\n  formatRelayRpcUrl,\r\n  isOnline,\r\n  subscribeToNetworkChange,\r\n  getBundleId,\r\n  getInternalError,\r\n  isNode,\r\n} from \"@walletconnect/utils\";\r\n\r\nimport {\r\n  RELAYER_SDK_VERSION,\r\n  RELAYER_CONTEXT,\r\n  RELAYER_DEFAULT_LOGGER,\r\n  RELAYER_EVENTS,\r\n  RELAYER_PROVIDER_EVENTS,\r\n  RELAYER_SUBSCRIBER_SUFFIX,\r\n  RELAYER_DEFAULT_RELAY_URL,\r\n  SUBSCRIBER_EVENTS,\r\n  RELAYER_RECONNECT_TIMEOUT,\r\n  RELAYER_TRANSPORT_CUTOFF,\r\n} from \"../constants\";\r\nimport { MessageTracker } from \"./messages\";\r\nimport { Publisher } from \"./publisher\";\r\nimport { Subscriber } from \"./subscriber\";\r\n\r\nexport class Relayer extends IRelayer {\r\n  public protocol = \"wc\";\r\n  public version = 2;\r\n\r\n  public core: ICore;\r\n  public logger: Logger;\r\n  public events = new EventEmitter();\r\n  public provider: IJsonRpcProvider;\r\n  public messages: IMessageTracker;\r\n  public subscriber: ISubscriber;\r\n  public publisher: IPublisher;\r\n  public name = RELAYER_CONTEXT;\r\n  public transportExplicitlyClosed = false;\r\n\r\n  private initialized = false;\r\n  private connectionAttemptInProgress = false;\r\n\r\n  private relayUrl: string;\r\n  private projectId: string | undefined;\r\n  private bundleId: string | undefined;\r\n  private connectionStatusPollingInterval = 20;\r\n  private staleConnectionErrors = [\"socket hang up\", \"stalled\", \"interrupted\"];\r\n  private hasExperiencedNetworkDisruption = false;\r\n  private requestsInFlight = new Map<\r\n    number,\r\n    {\r\n      promise: Promise<any>;\r\n      request: RequestArguments<RelayJsonRpc.SubscribeParams>;\r\n    }\r\n  >();\r\n\r\n  private pingTimeout: NodeJS.Timeout | undefined;\r\n  /**\r\n   * the relay pings the client 30 seconds after the last message was received\r\n   * meaning if we don't receive a message in 30 seconds, the connection can be considered dead\r\n   */\r\n  private heartBeatTimeout = toMiliseconds(THIRTY_SECONDS + ONE_SECOND);\r\n\r\n  constructor(opts: RelayerOptions) {\r\n    super(opts);\r\n    this.core = opts.core;\r\n    this.logger =\r\n      typeof opts.logger !== \"undefined\" && typeof opts.logger !== \"string\"\r\n        ? generateChildLogger(opts.logger, this.name)\r\n        : pino(getDefaultLoggerOptions({ level: opts.logger || RELAYER_DEFAULT_LOGGER }));\r\n    this.messages = new MessageTracker(this.logger, opts.core);\r\n    this.subscriber = new Subscriber(this, this.logger);\r\n    this.publisher = new Publisher(this, this.logger);\r\n\r\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\r\n    this.projectId = opts.projectId;\r\n    this.bundleId = getBundleId();\r\n\r\n    // re-assigned during init()\r\n    this.provider = {} as IJsonRpcProvider;\r\n  }\r\n\r\n  public async init() {\r\n    this.logger.trace(`Initialized`);\r\n    this.registerEventListeners();\r\n    await Promise.all([this.messages.init(), this.subscriber.init()]);\r\n    await this.transportOpen();\r\n    this.initialized = true;\r\n    setTimeout(async () => {\r\n      if (this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0) {\r\n        this.logger.info(`No topics subscribed to after init, closing transport`);\r\n        await this.transportClose();\r\n        this.transportExplicitlyClosed = false;\r\n      }\r\n    }, RELAYER_TRANSPORT_CUTOFF);\r\n  }\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get connected() {\r\n    // @ts-expect-error\r\n    return this.provider?.connection?.socket?.readyState === 1 ?? false;\r\n  }\r\n\r\n  get connecting() {\r\n    // @ts-expect-error\r\n    return this.provider?.connection?.socket?.readyState === 0 ?? false;\r\n  }\r\n\r\n  public async publish(topic: string, message: string, opts?: RelayerTypes.PublishOptions) {\r\n    this.isInitialized();\r\n    await this.publisher.publish(topic, message, opts);\r\n    await this.recordMessageEvent({\r\n      topic,\r\n      message,\r\n      // We don't have `publishedAt` from the relay server on outgoing, so use current time to satisfy type.\r\n      publishedAt: Date.now(),\r\n    });\r\n  }\r\n\r\n  public async subscribe(topic: string, opts?: RelayerTypes.SubscribeOptions) {\r\n    this.isInitialized();\r\n    let id = this.subscriber.topicMap.get(topic)?.[0] || \"\";\r\n    let resolvePromise: () => void;\r\n    const onSubCreated = (subscription: SubscriberTypes.Active) => {\r\n      if (subscription.topic === topic) {\r\n        this.subscriber.off(SUBSCRIBER_EVENTS.created, onSubCreated);\r\n        resolvePromise();\r\n      }\r\n    };\r\n\r\n    await Promise.all([\r\n      new Promise<void>((resolve) => {\r\n        resolvePromise = resolve;\r\n        this.subscriber.on(SUBSCRIBER_EVENTS.created, onSubCreated);\r\n      }),\r\n      new Promise<void>(async (resolve) => {\r\n        const result = await this.subscriber.subscribe(topic, opts);\r\n        id = result || id;\r\n        resolve();\r\n      }),\r\n    ]);\r\n    return id;\r\n  }\r\n\r\n  public request = async (request: RequestArguments<RelayJsonRpc.SubscribeParams>) => {\r\n    this.logger.debug(`Publishing Request Payload`);\r\n    const id = request.id || (getBigIntRpcId().toString() as any);\r\n    await this.toEstablishConnection();\r\n    try {\r\n      const requestPromise = this.provider.request(request);\r\n      this.requestsInFlight.set(id, {\r\n        promise: requestPromise,\r\n        request,\r\n      });\r\n      this.logger.trace(\r\n        {\r\n          id,\r\n          method: request.method,\r\n          topic: request.params?.topic,\r\n        },\r\n        \"relayer.request - attempt to publish...\",\r\n      );\r\n\r\n      /**\r\n       * During publish, we must listen for any disconnect event and reject the promise, else the publish would hang indefinitely\r\n       */\r\n      const result = await new Promise(async (resolve, reject) => {\r\n        const onDisconnect = () => {\r\n          reject(new Error(`relayer.request - publish interrupted, id: ${id}`));\r\n        };\r\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\r\n        const res = await requestPromise;\r\n        this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\r\n        resolve(res);\r\n      });\r\n      this.logger.trace(\r\n        {\r\n          id,\r\n          method: request.method,\r\n          topic: request.params?.topic,\r\n        },\r\n        \"relayer.request - published\",\r\n      );\r\n      return result as JsonRpcPayload;\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Publish Request: ${id}`);\r\n      throw e;\r\n    } finally {\r\n      this.requestsInFlight.delete(id);\r\n    }\r\n  };\r\n\r\n  public async unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\r\n    this.isInitialized();\r\n    await this.subscriber.unsubscribe(topic, opts);\r\n  }\r\n\r\n  public on(event: string, listener: any) {\r\n    this.events.on(event, listener);\r\n  }\r\n\r\n  public once(event: string, listener: any) {\r\n    this.events.once(event, listener);\r\n  }\r\n\r\n  public off(event: string, listener: any) {\r\n    this.events.off(event, listener);\r\n  }\r\n\r\n  public removeListener(event: string, listener: any) {\r\n    this.events.removeListener(event, listener);\r\n  }\r\n\r\n  public async transportDisconnect() {\r\n    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) {\r\n      try {\r\n        await Promise.all(\r\n          Array.from(this.requestsInFlight.values()).map((request) => request.promise),\r\n        );\r\n      } catch (e) {\r\n        this.logger.warn(e);\r\n      }\r\n    }\r\n\r\n    if (this.hasExperiencedNetworkDisruption || this.connected) {\r\n      await createExpiringPromise(this.provider.disconnect(), 2000, \"provider.disconnect()\").catch(\r\n        () => this.onProviderDisconnect(),\r\n      );\r\n    } else {\r\n      this.onProviderDisconnect();\r\n    }\r\n  }\r\n\r\n  public async transportClose() {\r\n    this.transportExplicitlyClosed = true;\r\n    await this.transportDisconnect();\r\n  }\r\n\r\n  public async transportOpen(relayUrl?: string) {\r\n    await this.confirmOnlineStateOrThrow();\r\n    if (relayUrl && relayUrl !== this.relayUrl) {\r\n      this.relayUrl = relayUrl;\r\n      await this.transportDisconnect();\r\n    }\r\n    // Always create new socket instance when trying to connect because if the socket was dropped due to `socket hang up` exception\r\n    // It wont be able to reconnect\r\n    await this.createProvider();\r\n    this.connectionAttemptInProgress = true;\r\n    this.transportExplicitlyClosed = false;\r\n    try {\r\n      await new Promise<void>(async (resolve, reject) => {\r\n        const onDisconnect = () => {\r\n          this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\r\n          reject(new Error(`Connection interrupted while trying to subscribe`));\r\n        };\r\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\r\n\r\n        await createExpiringPromise(\r\n          this.provider.connect(),\r\n          toMiliseconds(ONE_MINUTE),\r\n          `Socket stalled when trying to connect to ${this.relayUrl}`,\r\n        ).catch((e) => {\r\n          reject(e);\r\n        });\r\n        this.subscriber.start().catch((error) => {\r\n          this.logger.error(error);\r\n          this.onDisconnectHandler();\r\n        });\r\n        this.hasExperiencedNetworkDisruption = false;\r\n        resolve();\r\n      });\r\n    } catch (e) {\r\n      this.logger.error(e);\r\n      const error = e as Error;\r\n      this.hasExperiencedNetworkDisruption = true;\r\n      if (!this.isConnectionStalled(error.message)) {\r\n        throw e;\r\n      }\r\n    } finally {\r\n      this.connectionAttemptInProgress = false;\r\n    }\r\n  }\r\n\r\n  public async restartTransport(relayUrl?: string) {\r\n    if (this.connectionAttemptInProgress) return;\r\n    this.relayUrl = relayUrl || this.relayUrl;\r\n    await this.confirmOnlineStateOrThrow();\r\n    await this.transportClose();\r\n    await this.transportOpen();\r\n  }\r\n\r\n  public async confirmOnlineStateOrThrow() {\r\n    if (await isOnline()) return;\r\n    throw new Error(\"No internet connection detected. Please restart your network and try again.\");\r\n  }\r\n\r\n  public async handleBatchMessageEvents(messages: RelayerTypes.MessageEvent[]) {\r\n    if (messages?.length === 0) {\r\n      this.logger.trace(\"Batch message events is empty. Ignoring...\");\r\n      return;\r\n    }\r\n    const sortedMessages = messages.sort((a, b) => a.publishedAt - b.publishedAt);\r\n    this.logger.trace(`Batch of ${sortedMessages.length} message events sorted`);\r\n    for (const message of sortedMessages) {\r\n      try {\r\n        await this.onMessageEvent(message);\r\n      } catch (e) {\r\n        this.logger.warn(e);\r\n      }\r\n    }\r\n    this.logger.trace(`Batch of ${sortedMessages.length} message events processed`);\r\n  }\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n  /*\r\n   * In Node, we must detect when the connection is stalled and terminate it.\r\n   * The logic is, if we don't receive ping from the relay within a certain time, we terminate the connection.\r\n   * The timer is refreshed on every message received from the relay.\r\n   *\r\n   * In the browser, ping/pong events are not exposed, so the above behaviour is handled by `subscribeToNetworkChange` and `isOnline` functions.\r\n   */\r\n  private startPingTimeout() {\r\n    if (!isNode()) return;\r\n    try {\r\n      //@ts-expect-error - Types are divergent between the node and browser WS API\r\n      if (this.provider?.connection?.socket) {\r\n        //@ts-expect-error\r\n        this.provider?.connection?.socket?.once(\"ping\", () => {\r\n          this.resetPingTimeout();\r\n        });\r\n      }\r\n      this.resetPingTimeout();\r\n    } catch (e) {\r\n      this.logger.warn(e);\r\n    }\r\n  }\r\n\r\n  private resetPingTimeout = () => {\r\n    if (!isNode()) return;\r\n    try {\r\n      clearTimeout(this.pingTimeout);\r\n      this.pingTimeout = setTimeout(() => {\r\n        //@ts-expect-error\r\n        this.provider?.connection?.socket?.terminate();\r\n      }, this.heartBeatTimeout);\r\n    } catch (e) {\r\n      this.logger.warn(e);\r\n    }\r\n  };\r\n\r\n  private isConnectionStalled(message: string) {\r\n    return this.staleConnectionErrors.some((error) => message.includes(error));\r\n  }\r\n\r\n  private async createProvider() {\r\n    if (this.provider.connection) {\r\n      this.unregisterProviderListeners();\r\n    }\r\n    const auth = await this.core.crypto.signJWT(this.relayUrl);\r\n\r\n    this.provider = new JsonRpcProvider(\r\n      new WsConnection(\r\n        formatRelayRpcUrl({\r\n          sdkVersion: RELAYER_SDK_VERSION,\r\n          protocol: this.protocol,\r\n          version: this.version,\r\n          relayUrl: this.relayUrl,\r\n          projectId: this.projectId,\r\n          auth,\r\n          useOnCloseEvent: true,\r\n          bundleId: this.bundleId,\r\n        }),\r\n      ),\r\n    );\r\n    this.registerProviderListeners();\r\n  }\r\n\r\n  private async recordMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\r\n    const { topic, message } = messageEvent;\r\n    await this.messages.set(topic, message);\r\n  }\r\n\r\n  private async shouldIgnoreMessageEvent(\r\n    messageEvent: RelayerTypes.MessageEvent,\r\n  ): Promise<boolean> {\r\n    const { topic, message } = messageEvent;\r\n\r\n    // Ignore if incoming `message` is clearly invalid.\r\n    if (!message || message.length === 0) {\r\n      this.logger.debug(`Ignoring invalid/empty message: ${message}`);\r\n      return true;\r\n    }\r\n\r\n    // Ignore if `topic` is not subscribed to.\r\n    if (!(await this.subscriber.isSubscribed(topic))) {\r\n      this.logger.debug(`Ignoring message for non-subscribed topic ${topic}`);\r\n      return true;\r\n    }\r\n\r\n    // Ignore if `message` is a duplicate.\r\n    const exists = this.messages.has(topic, message);\r\n    if (exists) {\r\n      this.logger.debug(`Ignoring duplicate message: ${message}`);\r\n    }\r\n    return exists;\r\n  }\r\n\r\n  private async onProviderPayload(payload: JsonRpcPayload) {\r\n    this.logger.debug(`Incoming Relay Payload`);\r\n    this.logger.trace({ type: \"payload\", direction: \"incoming\", payload });\r\n    if (isJsonRpcRequest(payload)) {\r\n      if (!payload.method.endsWith(RELAYER_SUBSCRIBER_SUFFIX)) return;\r\n      const event = (payload as JsonRpcRequest<RelayJsonRpc.SubscriptionParams>).params;\r\n      const { topic, message, publishedAt } = event.data;\r\n      const messageEvent: RelayerTypes.MessageEvent = { topic, message, publishedAt };\r\n      this.logger.debug(`Emitting Relayer Payload`);\r\n      this.logger.trace({ type: \"event\", event: event.id, ...messageEvent });\r\n      this.events.emit(event.id, messageEvent);\r\n      await this.acknowledgePayload(payload);\r\n      await this.onMessageEvent(messageEvent);\r\n    } else if (isJsonRpcResponse(payload)) {\r\n      this.events.emit(RELAYER_EVENTS.message_ack, payload);\r\n    }\r\n  }\r\n\r\n  private async onMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\r\n    if (await this.shouldIgnoreMessageEvent(messageEvent)) return;\r\n    this.events.emit(RELAYER_EVENTS.message, messageEvent);\r\n    await this.recordMessageEvent(messageEvent);\r\n  }\r\n\r\n  private async acknowledgePayload(payload: JsonRpcPayload) {\r\n    const response = formatJsonRpcResult(payload.id, true);\r\n    await this.provider.connection.send(response);\r\n  }\r\n\r\n  // ---------- Events Handlers ----------------------------------------------- //\r\n  private onPayloadHandler = (payload: JsonRpcPayload) => {\r\n    this.onProviderPayload(payload);\r\n    this.resetPingTimeout();\r\n  };\r\n\r\n  private onConnectHandler = () => {\r\n    this.logger.trace(\"relayer connected\");\r\n    this.startPingTimeout();\r\n    this.events.emit(RELAYER_EVENTS.connect);\r\n  };\r\n\r\n  private onDisconnectHandler = () => {\r\n    this.logger.trace(\"relayer disconnected\");\r\n    this.onProviderDisconnect();\r\n  };\r\n\r\n  private onProviderErrorHandler = (error: Error) => {\r\n    this.logger.error(error);\r\n    this.events.emit(RELAYER_EVENTS.error, error);\r\n    // close the transport when a fatal error is received as there's no way to recover from it\r\n    // usual cases are missing/invalid projectId, expired jwt token, invalid origin etc\r\n    this.logger.info(\"Fatal socket error received, closing transport\");\r\n    this.transportClose();\r\n  };\r\n\r\n  private registerProviderListeners = () => {\r\n    this.provider.on(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\r\n    this.provider.on(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\r\n    this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\r\n    this.provider.on(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\r\n  };\r\n\r\n  private unregisterProviderListeners() {\r\n    this.provider.off(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\r\n    this.provider.off(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\r\n    this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\r\n    this.provider.off(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\r\n    clearTimeout(this.pingTimeout);\r\n  }\r\n\r\n  private async registerEventListeners() {\r\n    let lastConnectedState = await isOnline();\r\n    subscribeToNetworkChange(async (connected: boolean) => {\r\n      // sometimes the network change event is triggered multiple times so avoid reacting to the samFe value\r\n      if (lastConnectedState === connected) return;\r\n\r\n      lastConnectedState = connected;\r\n      if (!connected) {\r\n        // when the device network is restarted, the socket might stay in false `connected` state\r\n        this.hasExperiencedNetworkDisruption = true;\r\n        await this.transportDisconnect();\r\n        this.transportExplicitlyClosed = false;\r\n      } else {\r\n        await this.restartTransport().catch((error) => this.logger.error(error));\r\n      }\r\n    });\r\n  }\r\n\r\n  private async onProviderDisconnect() {\r\n    await this.subscriber.stop();\r\n    this.requestsInFlight.clear();\r\n    clearTimeout(this.pingTimeout);\r\n    this.events.emit(RELAYER_EVENTS.disconnect);\r\n    this.connectionAttemptInProgress = false;\r\n    if (this.transportExplicitlyClosed) return;\r\n    setTimeout(async () => {\r\n      await this.transportOpen().catch((error) => this.logger.error(error));\r\n    }, toMiliseconds(RELAYER_RECONNECT_TIMEOUT));\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  private async toEstablishConnection() {\r\n    await this.confirmOnlineStateOrThrow();\r\n    if (this.connected) return;\r\n    if (this.connectionAttemptInProgress) {\r\n      await new Promise<void>((resolve) => {\r\n        const interval = setInterval(() => {\r\n          if (this.connected) {\r\n            clearInterval(interval);\r\n            resolve();\r\n          }\r\n        }, this.connectionStatusPollingInterval);\r\n      });\r\n    }\r\n    await this.transportOpen();\r\n  }\r\n}\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { ICore, IStore } from \"@walletconnect/types\";\r\nimport {\r\n  getInternalError,\r\n  isProposalStruct,\r\n  isSessionStruct,\r\n  isUndefined,\r\n} from \"@walletconnect/utils\";\r\nimport { CORE_STORAGE_PREFIX, STORE_STORAGE_VERSION } from \"../constants\";\r\nimport isEqual from \"lodash.isequal\";\r\n\r\nexport class Store<Key, Data extends Record<string, any>> extends IStore<Key, Data> {\r\n  public map = new Map<Key, Data>();\r\n  public version = STORE_STORAGE_VERSION;\r\n\r\n  private cached: Data[] = [];\r\n  private initialized = false;\r\n\r\n  /**\r\n   * Regenerates the value key to retrieve it from cache\r\n   */\r\n  private getKey: ((data: Data) => Key) | undefined;\r\n\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n\r\n  // stores recently deleted key to return different rejection message when key is not found\r\n  private recentlyDeleted: Key[] = [];\r\n  private recentlyDeletedLimit = 200;\r\n\r\n  /**\r\n   * @param {ICore} core Core\r\n   * @param {Logger} logger Logger\r\n   * @param {string} name Store's name\r\n   * @param {Store<Key, Data>[\"getKey\"]} getKey Regenerates the value key to retrieve it from cache\r\n   * @param {string} storagePrefix Prefixes value keys\r\n   */\r\n  constructor(\r\n    public core: ICore,\r\n    public logger: Logger,\r\n    public name: string,\r\n    storagePrefix: string = CORE_STORAGE_PREFIX,\r\n    getKey: Store<Key, Data>[\"getKey\"] = undefined,\r\n  ) {\r\n    super(core, logger, name, storagePrefix);\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.storagePrefix = storagePrefix;\r\n    this.getKey = getKey;\r\n  }\r\n\r\n  public init: IStore<Key, Data>[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      this.logger.trace(`Initialized`);\r\n\r\n      await this.restore();\r\n\r\n      this.cached.forEach((value) => {\r\n        if (this.getKey && value !== null && !isUndefined(value)) {\r\n          this.map.set(this.getKey(value), value);\r\n        } else if (isProposalStruct(value)) {\r\n          // TODO(pedro) revert type casting as any\r\n          this.map.set(value.id as any, value);\r\n        } else if (isSessionStruct(value)) {\r\n          // TODO(pedro) revert type casting as any\r\n          this.map.set(value.topic as any, value);\r\n        }\r\n      });\r\n\r\n      this.cached = [];\r\n      this.initialized = true;\r\n    }\r\n  };\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\r\n  }\r\n\r\n  get length() {\r\n    return this.map.size;\r\n  }\r\n\r\n  get keys() {\r\n    return Array.from(this.map.keys());\r\n  }\r\n\r\n  get values() {\r\n    return Array.from(this.map.values());\r\n  }\r\n\r\n  public set: IStore<Key, Data>[\"set\"] = async (key, value) => {\r\n    this.isInitialized();\r\n    if (this.map.has(key)) {\r\n      await this.update(key, value);\r\n    } else {\r\n      this.logger.debug(`Setting value`);\r\n      this.logger.trace({ type: \"method\", method: \"set\", key, value });\r\n      this.map.set(key, value);\r\n      await this.persist();\r\n    }\r\n  };\r\n\r\n  public get: IStore<Key, Data>[\"get\"] = (key) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Getting value`);\r\n    this.logger.trace({ type: \"method\", method: \"get\", key });\r\n    const value = this.getData(key);\r\n    return value;\r\n  };\r\n\r\n  public getAll: IStore<Key, Data>[\"getAll\"] = (filter) => {\r\n    this.isInitialized();\r\n    if (!filter) return this.values;\r\n\r\n    return this.values.filter((value) =>\r\n      Object.keys(filter).every((key) => isEqual(value[key], filter[key])),\r\n    );\r\n  };\r\n\r\n  public update: IStore<Key, Data>[\"update\"] = async (key, update) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Updating value`);\r\n    this.logger.trace({ type: \"method\", method: \"update\", key, update });\r\n    const value = { ...this.getData(key), ...update };\r\n    this.map.set(key, value);\r\n    await this.persist();\r\n  };\r\n\r\n  public delete: IStore<Key, Data>[\"delete\"] = async (key, reason) => {\r\n    this.isInitialized();\r\n    if (!this.map.has(key)) return;\r\n    this.logger.debug(`Deleting value`);\r\n    this.logger.trace({ type: \"method\", method: \"delete\", key, reason });\r\n    this.map.delete(key);\r\n    this.addToRecentlyDeleted(key);\r\n    await this.persist();\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private addToRecentlyDeleted(key: Key) {\r\n    this.recentlyDeleted.push(key);\r\n    // limit the size of the recentlyDeleted array, truncate the 100 oldest entries.\r\n    if (this.recentlyDeleted.length >= this.recentlyDeletedLimit) {\r\n      this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\r\n    }\r\n  }\r\n\r\n  private async setDataStore(value: Data[]) {\r\n    await this.core.storage.setItem<Data[]>(this.storageKey, value);\r\n  }\r\n\r\n  private async getDataStore() {\r\n    const value = await this.core.storage.getItem<Data[]>(this.storageKey);\r\n    return value;\r\n  }\r\n\r\n  private getData(key: Key) {\r\n    const value = this.map.get(key);\r\n    if (!value) {\r\n      if (this.recentlyDeleted.includes(key)) {\r\n        const { message } = getInternalError(\r\n          \"MISSING_OR_INVALID\",\r\n          `Record was recently deleted - ${this.name}: ${key}`,\r\n        );\r\n        this.logger.error(message);\r\n        throw new Error(message);\r\n      }\r\n\r\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${key}`);\r\n      this.logger.error(message);\r\n      throw new Error(message);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private async persist() {\r\n    await this.setDataStore(this.values);\r\n  }\r\n\r\n  private async restore() {\r\n    try {\r\n      const persisted = await this.getDataStore();\r\n      if (typeof persisted === \"undefined\") return;\r\n      if (!persisted.length) return;\r\n      if (this.map.size) {\r\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\r\n        this.logger.error(message);\r\n        throw new Error(message);\r\n      }\r\n      this.cached = persisted;\r\n      this.logger.debug(`Successfully Restored value for ${this.name}`);\r\n      this.logger.trace({ type: \"method\", method: \"restore\", value: this.values });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Restore value for ${this.name}`);\r\n      this.logger.error(e as any);\r\n    }\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport {\r\n  ICore,\r\n  PairingTypes,\r\n  IPairing,\r\n  IPairingPrivate,\r\n  IStore,\r\n  RelayerTypes,\r\n  PairingJsonRpcTypes,\r\n  ExpirerTypes,\r\n} from \"@walletconnect/types\";\r\nimport {\r\n  getInternalError,\r\n  parseUri,\r\n  calcExpiry,\r\n  generateRandomBytes32,\r\n  formatUri,\r\n  getSdkError,\r\n  engineEvent,\r\n  createDelayedPromise,\r\n  isValidParams,\r\n  isValidUrl,\r\n  isValidString,\r\n  isExpired,\r\n  parseExpirerTarget,\r\n  TYPE_1,\r\n} from \"@walletconnect/utils\";\r\nimport {\r\n  formatJsonRpcRequest,\r\n  formatJsonRpcResult,\r\n  formatJsonRpcError,\r\n  isJsonRpcRequest,\r\n  isJsonRpcResponse,\r\n  isJsonRpcResult,\r\n  isJsonRpcError,\r\n} from \"@walletconnect/jsonrpc-utils\";\r\nimport { FIVE_MINUTES, THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\r\nimport EventEmitter from \"events\";\r\nimport {\r\n  PAIRING_CONTEXT,\r\n  PAIRING_STORAGE_VERSION,\r\n  CORE_STORAGE_PREFIX,\r\n  RELAYER_DEFAULT_PROTOCOL,\r\n  PAIRING_RPC_OPTS,\r\n  RELAYER_EVENTS,\r\n  EXPIRER_EVENTS,\r\n  PAIRING_EVENTS,\r\n} from \"../constants\";\r\nimport { Store } from \"../controllers/store\";\r\n\r\nexport class Pairing implements IPairing {\r\n  public name = PAIRING_CONTEXT;\r\n  public version = PAIRING_STORAGE_VERSION;\r\n\r\n  public events = new EventEmitter();\r\n  public pairings: IStore<string, PairingTypes.Struct>;\r\n\r\n  private initialized = false;\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n  private ignoredPayloadTypes = [TYPE_1];\r\n  private registeredMethods: string[] = [];\r\n\r\n  constructor(public core: ICore, public logger: Logger) {\r\n    this.core = core;\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.pairings = new Store(this.core, this.logger, this.name, this.storagePrefix);\r\n  }\r\n\r\n  public init: IPairing[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      await this.pairings.init();\r\n      await this.cleanup();\r\n      this.registerRelayerEvents();\r\n      this.registerExpirerEvents();\r\n      this.initialized = true;\r\n      this.logger.trace(`Initialized`);\r\n    }\r\n  };\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  public register: IPairing[\"register\"] = ({ methods }) => {\r\n    this.isInitialized();\r\n    this.registeredMethods = [...new Set([...this.registeredMethods, ...methods])];\r\n  };\r\n\r\n  public create: IPairing[\"create\"] = async (params) => {\r\n    this.isInitialized();\r\n    const symKey = generateRandomBytes32();\r\n    const topic = await this.core.crypto.setSymKey(symKey);\r\n    const expiry = calcExpiry(FIVE_MINUTES);\r\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\r\n    const pairing = { topic, expiry, relay, active: false };\r\n    const uri = formatUri({\r\n      protocol: this.core.protocol,\r\n      version: this.core.version,\r\n      topic,\r\n      symKey,\r\n      relay,\r\n      expiryTimestamp: expiry,\r\n      methods: params?.methods,\r\n    });\r\n    this.core.expirer.set(topic, expiry);\r\n    await this.pairings.set(topic, pairing);\r\n    await this.core.relayer.subscribe(topic);\r\n\r\n    return { topic, uri };\r\n  };\r\n\r\n  public pair: IPairing[\"pair\"] = async (params) => {\r\n    this.isInitialized();\r\n    this.isValidPair(params);\r\n    const { topic, symKey, relay, expiryTimestamp, methods } = parseUri(params.uri);\r\n    let existingPairing;\r\n    if (this.pairings.keys.includes(topic)) {\r\n      existingPairing = this.pairings.get(topic);\r\n      if (existingPairing.active) {\r\n        throw new Error(\r\n          `Pairing already exists: ${topic}. Please try again with a new connection URI.`,\r\n        );\r\n      }\r\n    }\r\n\r\n    const expiry = expiryTimestamp || calcExpiry(FIVE_MINUTES);\r\n    const pairing = { topic, relay, expiry, active: false, methods };\r\n    this.core.expirer.set(topic, expiry);\r\n    await this.pairings.set(topic, pairing);\r\n\r\n    if (params.activatePairing) {\r\n      await this.activate({ topic });\r\n    }\r\n\r\n    this.events.emit(PAIRING_EVENTS.create, pairing);\r\n\r\n    // avoid overwriting keychain pairing already exists\r\n    if (!this.core.crypto.keychain.has(topic)) {\r\n      await this.core.crypto.setSymKey(symKey, topic);\r\n    }\r\n    await this.core.relayer.subscribe(topic, { relay });\r\n    return pairing;\r\n  };\r\n\r\n  public activate: IPairing[\"activate\"] = async ({ topic }) => {\r\n    this.isInitialized();\r\n    const expiry = calcExpiry(THIRTY_DAYS);\r\n    this.core.expirer.set(topic, expiry);\r\n    await this.pairings.update(topic, { active: true, expiry });\r\n  };\r\n\r\n  public ping: IPairing[\"ping\"] = async (params) => {\r\n    this.isInitialized();\r\n    await this.isValidPing(params);\r\n    const { topic } = params;\r\n    if (this.pairings.keys.includes(topic)) {\r\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\r\n      const { done, resolve, reject } = createDelayedPromise<void>();\r\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\r\n        if (error) reject(error);\r\n        else resolve();\r\n      });\r\n      await done();\r\n    }\r\n  };\r\n\r\n  public updateExpiry: IPairing[\"updateExpiry\"] = async ({ topic, expiry }) => {\r\n    this.isInitialized();\r\n    await this.pairings.update(topic, { expiry });\r\n  };\r\n\r\n  public updateMetadata: IPairing[\"updateMetadata\"] = async ({ topic, metadata }) => {\r\n    this.isInitialized();\r\n    await this.pairings.update(topic, { peerMetadata: metadata });\r\n  };\r\n\r\n  public getPairings: IPairing[\"getPairings\"] = () => {\r\n    this.isInitialized();\r\n    return this.pairings.values;\r\n  };\r\n\r\n  public disconnect: IPairing[\"disconnect\"] = async (params) => {\r\n    this.isInitialized();\r\n    await this.isValidDisconnect(params);\r\n    const { topic } = params;\r\n    if (this.pairings.keys.includes(topic)) {\r\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\r\n      await this.deletePairing(topic);\r\n    }\r\n  };\r\n\r\n  // ---------- Private Helpers ----------------------------------------------- //\r\n\r\n  private sendRequest: IPairingPrivate[\"sendRequest\"] = async (topic, method, params) => {\r\n    const payload = formatJsonRpcRequest(method, params);\r\n    const message = await this.core.crypto.encode(topic, payload);\r\n    const opts = PAIRING_RPC_OPTS[method].req;\r\n    this.core.history.set(topic, payload);\r\n    this.core.relayer.publish(topic, message, opts);\r\n    return payload.id;\r\n  };\r\n\r\n  private sendResult: IPairingPrivate[\"sendResult\"] = async (id, topic, result) => {\r\n    const payload = formatJsonRpcResult(id, result);\r\n    const message = await this.core.crypto.encode(topic, payload);\r\n    const record = await this.core.history.get(topic, id);\r\n    const opts = PAIRING_RPC_OPTS[record.request.method].res;\r\n    await this.core.relayer.publish(topic, message, opts);\r\n    await this.core.history.resolve(payload);\r\n  };\r\n\r\n  private sendError: IPairingPrivate[\"sendError\"] = async (id, topic, error) => {\r\n    const payload = formatJsonRpcError(id, error);\r\n    const message = await this.core.crypto.encode(topic, payload);\r\n    const record = await this.core.history.get(topic, id);\r\n    const opts = PAIRING_RPC_OPTS[record.request.method]\r\n      ? PAIRING_RPC_OPTS[record.request.method].res\r\n      : PAIRING_RPC_OPTS.unregistered_method.res;\r\n\r\n    await this.core.relayer.publish(topic, message, opts);\r\n    await this.core.history.resolve(payload);\r\n  };\r\n\r\n  private deletePairing: IPairingPrivate[\"deletePairing\"] = async (topic, expirerHasDeleted) => {\r\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\r\n    await this.core.relayer.unsubscribe(topic);\r\n    await Promise.all([\r\n      this.pairings.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\r\n      this.core.crypto.deleteSymKey(topic),\r\n      expirerHasDeleted ? Promise.resolve() : this.core.expirer.del(topic),\r\n    ]);\r\n  };\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n\r\n  private cleanup = async () => {\r\n    const expiredPairings = this.pairings.getAll().filter((pairing) => isExpired(pairing.expiry));\r\n    await Promise.all(expiredPairings.map((pairing) => this.deletePairing(pairing.topic)));\r\n  };\r\n\r\n  // ---------- Relay Events Router ----------------------------------- //\r\n\r\n  private registerRelayerEvents() {\r\n    this.core.relayer.on(RELAYER_EVENTS.message, async (event: RelayerTypes.MessageEvent) => {\r\n      const { topic, message } = event;\r\n\r\n      // Do not handle if the topic is not related to known pairing topics.\r\n      if (!this.pairings.keys.includes(topic)) return;\r\n\r\n      // messages of certain types should be ignored as they are handled by their respective SDKs\r\n      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(message))) return;\r\n\r\n      const payload = await this.core.crypto.decode(topic, message);\r\n\r\n      try {\r\n        if (isJsonRpcRequest(payload)) {\r\n          this.core.history.set(topic, payload);\r\n          this.onRelayEventRequest({ topic, payload });\r\n        } else if (isJsonRpcResponse(payload)) {\r\n          await this.core.history.resolve(payload);\r\n          await this.onRelayEventResponse({ topic, payload });\r\n          this.core.history.delete(topic, payload.id);\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private onRelayEventRequest: IPairingPrivate[\"onRelayEventRequest\"] = (event) => {\r\n    const { topic, payload } = event;\r\n    const reqMethod = payload.method as PairingJsonRpcTypes.WcMethod;\r\n\r\n    switch (reqMethod) {\r\n      case \"wc_pairingPing\":\r\n        return this.onPairingPingRequest(topic, payload);\r\n      case \"wc_pairingDelete\":\r\n        return this.onPairingDeleteRequest(topic, payload);\r\n      default:\r\n        return this.onUnknownRpcMethodRequest(topic, payload);\r\n    }\r\n  };\r\n\r\n  private onRelayEventResponse: IPairingPrivate[\"onRelayEventResponse\"] = async (event) => {\r\n    const { topic, payload } = event;\r\n    const record = await this.core.history.get(topic, payload.id);\r\n    const resMethod = record.request.method as PairingJsonRpcTypes.WcMethod;\r\n\r\n    switch (resMethod) {\r\n      case \"wc_pairingPing\":\r\n        return this.onPairingPingResponse(topic, payload);\r\n      default:\r\n        return this.onUnknownRpcMethodResponse(resMethod);\r\n    }\r\n  };\r\n\r\n  private onPairingPingRequest: IPairingPrivate[\"onPairingPingRequest\"] = async (\r\n    topic,\r\n    payload,\r\n  ) => {\r\n    const { id } = payload;\r\n    try {\r\n      this.isValidPing({ topic });\r\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\r\n      this.events.emit(PAIRING_EVENTS.ping, { id, topic });\r\n    } catch (err: any) {\r\n      await this.sendError(id, topic, err);\r\n      this.logger.error(err);\r\n    }\r\n  };\r\n\r\n  private onPairingPingResponse: IPairingPrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\r\n    const { id } = payload;\r\n    // put at the end of the stack to avoid a race condition\r\n    // where pairing_ping listener is not yet initialized\r\n    setTimeout(() => {\r\n      if (isJsonRpcResult(payload)) {\r\n        this.events.emit(engineEvent(\"pairing_ping\", id), {});\r\n      } else if (isJsonRpcError(payload)) {\r\n        this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  private onPairingDeleteRequest: IPairingPrivate[\"onPairingDeleteRequest\"] = async (\r\n    topic,\r\n    payload,\r\n  ) => {\r\n    const { id } = payload;\r\n    try {\r\n      this.isValidDisconnect({ topic });\r\n      await this.deletePairing(topic);\r\n      this.events.emit(PAIRING_EVENTS.delete, { id, topic });\r\n    } catch (err: any) {\r\n      await this.sendError(id, topic, err);\r\n      this.logger.error(err);\r\n    }\r\n  };\r\n\r\n  private onUnknownRpcMethodRequest: IPairingPrivate[\"onUnknownRpcMethodRequest\"] = async (\r\n    topic,\r\n    payload,\r\n  ) => {\r\n    const { id, method } = payload;\r\n\r\n    try {\r\n      // Ignore if the implementing client has registered this method as known.\r\n      if (this.registeredMethods.includes(method)) return;\r\n      const error = getSdkError(\"WC_METHOD_UNSUPPORTED\", method);\r\n      await this.sendError(id, topic, error);\r\n      this.logger.error(error);\r\n    } catch (err: any) {\r\n      await this.sendError(id, topic, err);\r\n      this.logger.error(err);\r\n    }\r\n  };\r\n\r\n  private onUnknownRpcMethodResponse: IPairingPrivate[\"onUnknownRpcMethodResponse\"] = (method) => {\r\n    // Ignore if the implementing client has registered this method as known.\r\n    if (this.registeredMethods.includes(method)) return;\r\n    this.logger.error(getSdkError(\"WC_METHOD_UNSUPPORTED\", method));\r\n  };\r\n\r\n  // ---------- Expirer Events ---------------------------------------- //\r\n\r\n  private registerExpirerEvents() {\r\n    this.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\r\n      const { topic } = parseExpirerTarget(event.target);\r\n      if (!topic) return;\r\n      if (!this.pairings.keys.includes(topic)) return;\r\n      await this.deletePairing(topic, true);\r\n      this.events.emit(PAIRING_EVENTS.expire, { topic });\r\n    });\r\n  }\r\n\r\n  // ---------- Validation Helpers ----------------------------------- //\r\n\r\n  private isValidPair = (params: { uri: string }) => {\r\n    if (!isValidParams(params)) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\r\n      throw new Error(message);\r\n    }\r\n    if (!isValidUrl(params.uri)) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\r\n      throw new Error(message);\r\n    }\r\n    const uri = parseUri(params.uri);\r\n    if (!uri?.relay?.protocol) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#relay-protocol`);\r\n      throw new Error(message);\r\n    }\r\n    if (!uri?.symKey) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#symKey`);\r\n      throw new Error(message);\r\n    }\r\n    if (uri?.expiryTimestamp) {\r\n      const expiration = toMiliseconds(uri?.expiryTimestamp);\r\n      if (expiration < Date.now()) {\r\n        const { message } = getInternalError(\r\n          \"EXPIRED\",\r\n          `pair() URI has expired. Please try again with a new connection URI.`,\r\n        );\r\n        throw new Error(message);\r\n      }\r\n    }\r\n  };\r\n\r\n  private isValidPing = async (params: { topic: string }) => {\r\n    if (!isValidParams(params)) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\r\n      throw new Error(message);\r\n    }\r\n    const { topic } = params;\r\n    await this.isValidPairingTopic(topic);\r\n  };\r\n\r\n  private isValidDisconnect = async (params: { topic: string }) => {\r\n    if (!isValidParams(params)) {\r\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\r\n      throw new Error(message);\r\n    }\r\n    const { topic } = params;\r\n    await this.isValidPairingTopic(topic);\r\n  };\r\n\r\n  private isValidPairingTopic = async (topic: any) => {\r\n    if (!isValidString(topic, false)) {\r\n      const { message } = getInternalError(\r\n        \"MISSING_OR_INVALID\",\r\n        `pairing topic should be a string: ${topic}`,\r\n      );\r\n      throw new Error(message);\r\n    }\r\n    if (!this.pairings.keys.includes(topic)) {\r\n      const { message } = getInternalError(\r\n        \"NO_MATCHING_KEY\",\r\n        `pairing topic doesn't exist: ${topic}`,\r\n      );\r\n      throw new Error(message);\r\n    }\r\n    if (isExpired(this.pairings.get(topic).expiry)) {\r\n      await this.deletePairing(topic);\r\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\r\n      throw new Error(message);\r\n    }\r\n  };\r\n}\r\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\r\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\r\nimport { calcExpiry, getInternalError } from \"@walletconnect/utils\";\r\nimport { EventEmitter } from \"events\";\r\nimport { THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\r\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\r\nimport {\r\n  CORE_STORAGE_PREFIX,\r\n  HISTORY_CONTEXT,\r\n  HISTORY_EVENTS,\r\n  HISTORY_STORAGE_VERSION,\r\n} from \"../constants\";\r\n\r\nexport class JsonRpcHistory extends IJsonRpcHistory {\r\n  public records = new Map<number, JsonRpcRecord>();\r\n  public events = new EventEmitter();\r\n  public name = HISTORY_CONTEXT;\r\n  public version = HISTORY_STORAGE_VERSION;\r\n\r\n  private cached: JsonRpcRecord[] = [];\r\n  private initialized = false;\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n\r\n  constructor(public core: ICore, public logger: Logger) {\r\n    super(core, logger);\r\n    this.logger = generateChildLogger(logger, this.name);\r\n  }\r\n\r\n  public init: IJsonRpcHistory[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      this.logger.trace(`Initialized`);\r\n      await this.restore();\r\n      this.cached.forEach((record) => this.records.set(record.id, record));\r\n      this.cached = [];\r\n      this.registerEventListeners();\r\n      this.initialized = true;\r\n    }\r\n  };\r\n\r\n  get context(): string {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.records.size;\r\n  }\r\n\r\n  get keys(): number[] {\r\n    return Array.from(this.records.keys());\r\n  }\r\n\r\n  get values() {\r\n    return Array.from(this.records.values());\r\n  }\r\n\r\n  get pending(): RequestEvent[] {\r\n    const requests: RequestEvent[] = [];\r\n    this.values.forEach((record) => {\r\n      if (typeof record.response !== \"undefined\") return;\r\n      const requestEvent: RequestEvent = {\r\n        topic: record.topic,\r\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\r\n        chainId: record.chainId,\r\n      };\r\n      return requests.push(requestEvent);\r\n    });\r\n    return requests;\r\n  }\r\n\r\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Setting JSON-RPC request history record`);\r\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\r\n    if (this.records.has(request.id)) return;\r\n    const record: JsonRpcRecord = {\r\n      id: request.id,\r\n      topic,\r\n      request: { method: request.method, params: request.params || null },\r\n      chainId,\r\n      expiry: calcExpiry(THIRTY_DAYS),\r\n    };\r\n    this.records.set(record.id, record);\r\n    this.persist();\r\n    this.events.emit(HISTORY_EVENTS.created, record);\r\n  };\r\n\r\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Updating JSON-RPC response history record`);\r\n    this.logger.trace({ type: \"method\", method: \"update\", response });\r\n    if (!this.records.has(response.id)) return;\r\n    const record = await this.getRecord(response.id);\r\n    if (typeof record.response !== \"undefined\") return;\r\n    record.response = isJsonRpcError(response)\r\n      ? { error: response.error }\r\n      : { result: response.result };\r\n    this.records.set(record.id, record);\r\n    this.persist();\r\n    this.events.emit(HISTORY_EVENTS.updated, record);\r\n  };\r\n\r\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Getting record`);\r\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\r\n    const record = await this.getRecord(id);\r\n    return record;\r\n  };\r\n\r\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\r\n    this.isInitialized();\r\n    this.logger.debug(`Deleting record`);\r\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\r\n    this.values.forEach((record: JsonRpcRecord) => {\r\n      if (record.topic === topic) {\r\n        if (typeof id !== \"undefined\" && record.id !== id) return;\r\n        this.records.delete(record.id);\r\n        this.events.emit(HISTORY_EVENTS.deleted, record);\r\n      }\r\n    });\r\n    this.persist();\r\n  };\r\n\r\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\r\n    this.isInitialized();\r\n    if (!this.records.has(id)) return false;\r\n    const record = await this.getRecord(id);\r\n    return record.topic === topic;\r\n  };\r\n\r\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\r\n    this.events.on(event, listener);\r\n  };\r\n\r\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\r\n    this.events.once(event, listener);\r\n  };\r\n\r\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\r\n    this.events.off(event, listener);\r\n  };\r\n\r\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\r\n    this.events.removeListener(event, listener);\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\r\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\r\n  }\r\n\r\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\r\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\r\n    return records;\r\n  }\r\n\r\n  private getRecord(id: number) {\r\n    this.isInitialized();\r\n    const record = this.records.get(id);\r\n    if (!record) {\r\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\r\n      throw new Error(message);\r\n    }\r\n    return record;\r\n  }\r\n\r\n  private async persist() {\r\n    await this.setJsonRpcRecords(this.values);\r\n    this.events.emit(HISTORY_EVENTS.sync);\r\n  }\r\n\r\n  private async restore() {\r\n    try {\r\n      const persisted = await this.getJsonRpcRecords();\r\n      if (typeof persisted === \"undefined\") return;\r\n      if (!persisted.length) return;\r\n      if (this.records.size) {\r\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\r\n        this.logger.error(message);\r\n        throw new Error(message);\r\n      }\r\n      this.cached = persisted;\r\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\r\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\r\n      this.logger.error(e as any);\r\n    }\r\n  }\r\n\r\n  private registerEventListeners(): void {\r\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\r\n      const eventName = HISTORY_EVENTS.created;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, record });\r\n    });\r\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\r\n      const eventName = HISTORY_EVENTS.updated;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, record });\r\n    });\r\n\r\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\r\n      const eventName = HISTORY_EVENTS.deleted;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, record });\r\n    });\r\n\r\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\r\n      this.cleanup();\r\n    });\r\n  }\r\n\r\n  private cleanup() {\r\n    try {\r\n      this.isInitialized();\r\n      let deleted = false;\r\n      this.records.forEach((record: JsonRpcRecord) => {\r\n        const msToExpiry = toMiliseconds(record.expiry || 0) - Date.now();\r\n        if (msToExpiry <= 0) {\r\n          this.logger.info(`Deleting expired history log: ${record.id}`);\r\n          this.records.delete(record.id);\r\n          this.events.emit(HISTORY_EVENTS.deleted, record, false);\r\n          deleted = true;\r\n        }\r\n      });\r\n      if (deleted) {\r\n        this.persist();\r\n      }\r\n    } catch (e) {\r\n      this.logger.warn(e);\r\n    }\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\r\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { toMiliseconds } from \"@walletconnect/time\";\r\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\r\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\r\nimport { EventEmitter } from \"events\";\r\nimport {\r\n  CORE_STORAGE_PREFIX,\r\n  EXPIRER_CONTEXT,\r\n  EXPIRER_EVENTS,\r\n  EXPIRER_STORAGE_VERSION,\r\n} from \"../constants\";\r\n\r\nexport class Expirer extends IExpirer {\r\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\r\n  public events = new EventEmitter();\r\n  public name = EXPIRER_CONTEXT;\r\n  public version = EXPIRER_STORAGE_VERSION;\r\n\r\n  private cached: ExpirerTypes.Expiration[] = [];\r\n  private initialized = false;\r\n\r\n  private storagePrefix = CORE_STORAGE_PREFIX;\r\n\r\n  constructor(public core: ICore, public logger: Logger) {\r\n    super(core, logger);\r\n    this.logger = generateChildLogger(logger, this.name);\r\n  }\r\n\r\n  public init: IExpirer[\"init\"] = async () => {\r\n    if (!this.initialized) {\r\n      this.logger.trace(`Initialized`);\r\n      await this.restore();\r\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\r\n      this.cached = [];\r\n      this.registerEventListeners();\r\n      this.initialized = true;\r\n    }\r\n  };\r\n\r\n  get context(): string {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  get storageKey() {\r\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\r\n  }\r\n\r\n  get length(): number {\r\n    return this.expirations.size;\r\n  }\r\n\r\n  get keys(): string[] {\r\n    return Array.from(this.expirations.keys());\r\n  }\r\n\r\n  get values(): ExpirerTypes.Expiration[] {\r\n    return Array.from(this.expirations.values());\r\n  }\r\n\r\n  public has: IExpirer[\"has\"] = (key) => {\r\n    try {\r\n      const target = this.formatTarget(key);\r\n      const expiration = this.getExpiration(target);\r\n      return typeof expiration !== \"undefined\";\r\n    } catch (e) {\r\n      // ignore\r\n      return false;\r\n    }\r\n  };\r\n\r\n  public set: IExpirer[\"set\"] = (key, expiry) => {\r\n    this.isInitialized();\r\n    const target = this.formatTarget(key);\r\n    const expiration = { target, expiry };\r\n    this.expirations.set(target, expiration);\r\n    this.checkExpiry(target, expiration);\r\n    this.events.emit(EXPIRER_EVENTS.created, {\r\n      target,\r\n      expiration,\r\n    } as ExpirerTypes.Created);\r\n  };\r\n\r\n  public get: IExpirer[\"get\"] = (key) => {\r\n    this.isInitialized();\r\n    const target = this.formatTarget(key);\r\n    return this.getExpiration(target);\r\n  };\r\n\r\n  public del: IExpirer[\"del\"] = (key) => {\r\n    this.isInitialized();\r\n    const exists = this.has(key);\r\n    if (exists) {\r\n      const target = this.formatTarget(key);\r\n      const expiration = this.getExpiration(target);\r\n      this.expirations.delete(target);\r\n      this.events.emit(EXPIRER_EVENTS.deleted, {\r\n        target,\r\n        expiration,\r\n      } as ExpirerTypes.Deleted);\r\n    }\r\n  };\r\n\r\n  public on: IExpirer[\"on\"] = (event, listener) => {\r\n    this.events.on(event, listener);\r\n  };\r\n\r\n  public once: IExpirer[\"once\"] = (event, listener) => {\r\n    this.events.once(event, listener);\r\n  };\r\n\r\n  public off: IExpirer[\"off\"] = (event, listener) => {\r\n    this.events.off(event, listener);\r\n  };\r\n\r\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\r\n    this.events.removeListener(event, listener);\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private formatTarget(key: string | number) {\r\n    if (typeof key === \"string\") {\r\n      return formatTopicTarget(key);\r\n    } else if (typeof key === \"number\") {\r\n      return formatIdTarget(key);\r\n    }\r\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\r\n    throw new Error(message);\r\n  }\r\n\r\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\r\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\r\n  }\r\n\r\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\r\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\r\n    return expirations;\r\n  }\r\n\r\n  private async persist() {\r\n    await this.setExpirations(this.values);\r\n    this.events.emit(EXPIRER_EVENTS.sync);\r\n  }\r\n\r\n  private async restore() {\r\n    try {\r\n      const persisted = await this.getExpirations();\r\n      if (typeof persisted === \"undefined\") return;\r\n      if (!persisted.length) return;\r\n      if (this.expirations.size) {\r\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\r\n        this.logger.error(message);\r\n        throw new Error(message);\r\n      }\r\n      this.cached = persisted;\r\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\r\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\r\n    } catch (e) {\r\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\r\n      this.logger.error(e as any);\r\n    }\r\n  }\r\n\r\n  private getExpiration(target: string): ExpirerTypes.Expiration {\r\n    const expiration = this.expirations.get(target);\r\n    if (!expiration) {\r\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\r\n      this.logger.warn(message);\r\n      throw new Error(message);\r\n    }\r\n    return expiration;\r\n  }\r\n\r\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\r\n    const { expiry } = expiration;\r\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\r\n    if (msToTimeout <= 0) this.expire(target, expiration);\r\n  }\r\n\r\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\r\n    this.expirations.delete(target);\r\n    this.events.emit(EXPIRER_EVENTS.expired, {\r\n      target,\r\n      expiration,\r\n    } as ExpirerTypes.Expired);\r\n  }\r\n\r\n  private checkExpirations(): void {\r\n    // avoid auto expiring if the relayer is not connected\r\n    if (!this.core.relayer.connected) return;\r\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\r\n  }\r\n\r\n  private registerEventListeners(): void {\r\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\r\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\r\n      const eventName = EXPIRER_EVENTS.created;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\r\n      this.persist();\r\n    });\r\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\r\n      const eventName = EXPIRER_EVENTS.expired;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\r\n      this.persist();\r\n    });\r\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\r\n      const eventName = EXPIRER_EVENTS.deleted;\r\n      this.logger.info(`Emitting ${eventName}`);\r\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\r\n      this.persist();\r\n    });\r\n  }\r\n\r\n  private isInitialized() {\r\n    if (!this.initialized) {\r\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\r\n      throw new Error(message);\r\n    }\r\n  }\r\n}\r\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\r\nimport { IVerify } from \"@walletconnect/types\";\r\nimport { isBrowser, isNode, isReactNative } from \"@walletconnect/utils\";\r\nimport { FIVE_SECONDS, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\r\n\r\nimport { TRUSTED_VERIFY_URLS, VERIFY_CONTEXT, VERIFY_SERVER } from \"../constants\";\r\n\r\nexport class Verify extends IVerify {\r\n  public name = VERIFY_CONTEXT;\r\n  private verifyUrl: string;\r\n  private iframe?: HTMLIFrameElement;\r\n  private initialized = false;\r\n  private abortController: AbortController;\r\n  private isDevEnv;\r\n  // the queue is only used during the loading phase of the iframe to ensure all attestations are posted\r\n  private queue: string[] = [];\r\n  // flag to disable verify when the iframe fails to load on main & fallback urls.\r\n  // this means Verify API is not enabled for the current projectId and there's no point in trying to initialize it again.\r\n  private verifyDisabled = false;\r\n\r\n  constructor(public projectId: string, public logger: Logger) {\r\n    super(projectId, logger);\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.verifyUrl = VERIFY_SERVER;\r\n    this.abortController = new AbortController();\r\n    this.isDevEnv = isNode() && process.env.IS_VITEST;\r\n  }\r\n\r\n  public init: IVerify[\"init\"] = async (params) => {\r\n    if (this.verifyDisabled) return;\r\n\r\n    // ignore on non browser environments\r\n    if (isReactNative() || !isBrowser()) return;\r\n\r\n    const verifyUrl = this.getVerifyUrl(params?.verifyUrl);\r\n    // if init is called again with a different url, remove the iframe and start over\r\n    if (this.verifyUrl !== verifyUrl) {\r\n      this.removeIframe();\r\n    }\r\n    this.verifyUrl = verifyUrl;\r\n\r\n    try {\r\n      await this.createIframe();\r\n    } catch (error) {\r\n      this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`);\r\n      this.logger.info(error);\r\n      // if the iframe fails to load, disable verify\r\n      this.verifyDisabled = true;\r\n    }\r\n  };\r\n\r\n  public register: IVerify[\"register\"] = async (params) => {\r\n    if (!this.initialized) {\r\n      this.addToQueue(params.attestationId);\r\n      await this.init();\r\n    } else {\r\n      this.sendPost(params.attestationId);\r\n    }\r\n  };\r\n\r\n  public resolve: IVerify[\"resolve\"] = async (params) => {\r\n    if (this.isDevEnv) return \"\";\r\n\r\n    const verifyUrl = this.getVerifyUrl(params?.verifyUrl);\r\n    return this.fetchAttestation(params.attestationId, verifyUrl);\r\n  };\r\n\r\n  get context(): string {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  private fetchAttestation = async (attestationId: string, url: string) => {\r\n    this.logger.info(`resolving attestation: ${attestationId} from url: ${url}`);\r\n    // set artificial timeout to prevent hanging\r\n    const timeout = this.startAbortTimer(ONE_SECOND * 5);\r\n    const result = await fetch(`${url}/attestation/${attestationId}`, {\r\n      signal: this.abortController.signal,\r\n    });\r\n    clearTimeout(timeout);\r\n    return result.status === 200 ? await result.json() : undefined;\r\n  };\r\n\r\n  private addToQueue = (attestationId: string) => {\r\n    this.queue.push(attestationId);\r\n  };\r\n\r\n  private processQueue = () => {\r\n    if (this.queue.length === 0) return;\r\n    this.queue.forEach((attestationId) => this.sendPost(attestationId));\r\n    this.queue = [];\r\n  };\r\n\r\n  private sendPost = (attestationId: string) => {\r\n    try {\r\n      if (!this.iframe) return;\r\n      this.iframe.contentWindow?.postMessage(attestationId, \"*\"); // setting targetOrigin to \"*\" fixes the `Failed to execute 'postMessage' on 'DOMWindow': The target origin provided...` while the iframe is still loading\r\n      this.logger.info(`postMessage sent: ${attestationId} ${this.verifyUrl}`);\r\n    } catch (e) {}\r\n  };\r\n\r\n  private createIframe = async () => {\r\n    let iframeOnLoadResolve: () => void;\r\n    const onMessage = (event: MessageEvent) => {\r\n      if (event.data === \"verify_ready\") {\r\n        this.onInit();\r\n        window.removeEventListener(\"message\", onMessage);\r\n        iframeOnLoadResolve();\r\n      }\r\n    };\r\n    await Promise.race([\r\n      new Promise<void>((resolve) => {\r\n        const existingIframe = document.getElementById(VERIFY_CONTEXT);\r\n        if (existingIframe) {\r\n          this.iframe = existingIframe as HTMLIFrameElement;\r\n          this.onInit();\r\n          return resolve();\r\n        }\r\n\r\n        window.addEventListener(\"message\", onMessage);\r\n        const iframe = document.createElement(\"iframe\");\r\n        iframe.id = VERIFY_CONTEXT;\r\n        iframe.src = `${this.verifyUrl}/${this.projectId}`;\r\n        iframe.style.display = \"none\";\r\n        document.body.append(iframe);\r\n        this.iframe = iframe;\r\n        iframeOnLoadResolve = resolve;\r\n      }),\r\n      new Promise((_, reject) =>\r\n        setTimeout(() => {\r\n          window.removeEventListener(\"message\", onMessage);\r\n          reject(\"verify iframe load timeout\");\r\n        }, toMiliseconds(FIVE_SECONDS)),\r\n      ),\r\n    ]);\r\n  };\r\n\r\n  private onInit = () => {\r\n    this.initialized = true;\r\n    this.processQueue();\r\n  };\r\n\r\n  private startAbortTimer(timer: number) {\r\n    this.abortController = new AbortController();\r\n    return setTimeout(() => this.abortController.abort(), toMiliseconds(timer));\r\n  }\r\n\r\n  private removeIframe = () => {\r\n    if (!this.iframe) return;\r\n    this.iframe.remove();\r\n    this.iframe = undefined;\r\n    this.initialized = false;\r\n  };\r\n\r\n  private getVerifyUrl = (verifyUrl?: string) => {\r\n    let url = verifyUrl || VERIFY_SERVER;\r\n    if (!TRUSTED_VERIFY_URLS.includes(url)) {\r\n      this.logger.info(\r\n        `verify url: ${url}, not included in trusted list, assigning default: ${VERIFY_SERVER}`,\r\n      );\r\n      url = VERIFY_SERVER;\r\n    }\r\n    return url;\r\n  };\r\n}\r\n","import { generateChildLogger, Logger } from \"@walletconnect/logger\";\r\nimport { IEchoClient } from \"@walletconnect/types\";\r\nimport { ECHO_CONTEXT, ECHO_URL } from \"../constants\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nexport class EchoClient extends IEchoClient {\r\n  public readonly context = ECHO_CONTEXT;\r\n  constructor(public projectId: string, public logger: Logger) {\r\n    super(projectId, logger);\r\n    this.logger = generateChildLogger(logger, this.context);\r\n  }\r\n\r\n  public registerDeviceToken: IEchoClient[\"registerDeviceToken\"] = async (params) => {\r\n    const { clientId, token, notificationType, enableEncrypted = false } = params;\r\n\r\n    const echoUrl = `${ECHO_URL}/${this.projectId}/clients`;\r\n\r\n    await fetch(echoUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        client_id: clientId,\r\n        type: notificationType,\r\n        token,\r\n        always_raw: enableEncrypted,\r\n      }),\r\n    });\r\n  };\r\n}\r\n","import { EventEmitter } from \"events\";\r\n\r\nimport KeyValueStorage from \"@walletconnect/keyvaluestorage\";\r\nimport { HeartBeat } from \"@walletconnect/heartbeat\";\r\nimport {\r\n  generateChildLogger,\r\n  getDefaultLoggerOptions,\r\n  getLoggerContext,\r\n  generatePlatformLogger,\r\n  ChunkLoggerController,\r\n} from \"@walletconnect/logger\";\r\nimport { CoreTypes, ICore } from \"@walletconnect/types\";\r\n\r\nimport {\r\n  Crypto,\r\n  Relayer,\r\n  Pairing,\r\n  JsonRpcHistory,\r\n  Expirer,\r\n  Verify,\r\n  EchoClient,\r\n} from \"./controllers\";\r\nimport {\r\n  CORE_CONTEXT,\r\n  CORE_DEFAULT,\r\n  CORE_PROTOCOL,\r\n  CORE_STORAGE_OPTIONS,\r\n  CORE_VERSION,\r\n  RELAYER_FALLBACK_RELAY_URL,\r\n  WALLETCONNECT_CLIENT_ID,\r\n} from \"./constants\";\r\n\r\nexport class Core extends ICore {\r\n  public readonly protocol = CORE_PROTOCOL;\r\n  public readonly version = CORE_VERSION;\r\n\r\n  public readonly name: ICore[\"name\"] = CORE_CONTEXT;\r\n  public readonly relayUrl: ICore[\"relayUrl\"];\r\n  public readonly projectId: ICore[\"projectId\"];\r\n  public readonly customStoragePrefix: ICore[\"customStoragePrefix\"];\r\n  public events: ICore[\"events\"] = new EventEmitter();\r\n  public logger: ICore[\"logger\"];\r\n  public heartbeat: ICore[\"heartbeat\"];\r\n  public relayer: ICore[\"relayer\"];\r\n  public crypto: ICore[\"crypto\"];\r\n  public storage: ICore[\"storage\"];\r\n  public history: ICore[\"history\"];\r\n  public expirer: ICore[\"expirer\"];\r\n  public pairing: ICore[\"pairing\"];\r\n  public verify: ICore[\"verify\"];\r\n  public echoClient: ICore[\"echoClient\"];\r\n\r\n  private initialized = false;\r\n  private logChunkController: ChunkLoggerController | null;\r\n\r\n  static async init(opts?: CoreTypes.Options) {\r\n    const core = new Core(opts);\r\n    await core.initialize();\r\n    const clientId = await core.crypto.getClientId();\r\n    await core.storage.setItem(WALLETCONNECT_CLIENT_ID, clientId);\r\n\r\n    return core;\r\n  }\r\n\r\n  constructor(opts?: CoreTypes.Options) {\r\n    super(opts);\r\n    this.projectId = opts?.projectId;\r\n    this.relayUrl = opts?.relayUrl || RELAYER_FALLBACK_RELAY_URL;\r\n    this.customStoragePrefix = opts?.customStoragePrefix ? `:${opts.customStoragePrefix}` : \"\";\r\n\r\n    const loggerOptions = getDefaultLoggerOptions({\r\n      level: typeof opts?.logger === \"string\" && opts.logger ? opts.logger : CORE_DEFAULT.logger,\r\n    });\r\n\r\n    const { logger, chunkLoggerController } = generatePlatformLogger({\r\n      opts: loggerOptions,\r\n      maxSizeInBytes: opts?.maxLogBlobSizeInBytes,\r\n      loggerOverride: opts?.logger,\r\n    });\r\n\r\n    this.logChunkController = chunkLoggerController;\r\n\r\n    if (this.logChunkController?.downloadLogsBlobInBrowser) {\r\n      // @ts-ignore\r\n      window.downloadLogsBlobInBrowser = async () => {\r\n        // Have to null check twice becquse there is no guarantee\r\n        // this.logChunkController.downloadLogsBlobInBrowser is always truthy\r\n        if (this.logChunkController?.downloadLogsBlobInBrowser) {\r\n          this.logChunkController?.downloadLogsBlobInBrowser({\r\n            clientId: await this.crypto.getClientId(),\r\n          });\r\n        }\r\n      };\r\n    }\r\n\r\n    this.logger = generateChildLogger(logger, this.name);\r\n    this.heartbeat = new HeartBeat();\r\n    this.crypto = new Crypto(this, this.logger, opts?.keychain);\r\n    this.history = new JsonRpcHistory(this, this.logger);\r\n    this.expirer = new Expirer(this, this.logger);\r\n    this.storage = opts?.storage\r\n      ? opts.storage\r\n      : new KeyValueStorage({ ...CORE_STORAGE_OPTIONS, ...opts?.storageOptions });\r\n    this.relayer = new Relayer({\r\n      core: this,\r\n      logger: this.logger,\r\n      relayUrl: this.relayUrl,\r\n      projectId: this.projectId,\r\n    });\r\n    this.pairing = new Pairing(this, this.logger);\r\n    this.verify = new Verify(this.projectId || \"\", this.logger);\r\n    this.echoClient = new EchoClient(this.projectId || \"\", this.logger);\r\n  }\r\n\r\n  get context() {\r\n    return getLoggerContext(this.logger);\r\n  }\r\n\r\n  // ---------- Public ----------------------------------------------- //\r\n\r\n  public async start() {\r\n    if (this.initialized) return;\r\n    await this.initialize();\r\n  }\r\n\r\n  public async getLogsBlob() {\r\n    return this.logChunkController?.logsToBlob({\r\n      clientId: await this.crypto.getClientId(),\r\n    });\r\n  }\r\n\r\n  // ---------- Events ----------------------------------------------- //\r\n\r\n  public on = (name: any, listener: any) => {\r\n    return this.events.on(name, listener);\r\n  };\r\n\r\n  public once = (name: any, listener: any) => {\r\n    return this.events.once(name, listener);\r\n  };\r\n\r\n  public off = (name: any, listener: any) => {\r\n    return this.events.off(name, listener);\r\n  };\r\n\r\n  public removeListener = (name: any, listener: any) => {\r\n    return this.events.removeListener(name, listener);\r\n  };\r\n\r\n  // ---------- Private ----------------------------------------------- //\r\n\r\n  private async initialize() {\r\n    this.logger.trace(`Initialized`);\r\n    try {\r\n      await this.crypto.init();\r\n      await this.history.init();\r\n      await this.expirer.init();\r\n      await this.relayer.init();\r\n      await this.heartbeat.init();\r\n      await this.pairing.init();\r\n      this.initialized = true;\r\n      this.logger.info(`Core Initialization Success`);\r\n    } catch (error) {\r\n      this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, error);\r\n      this.logger.error((error as any).message);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import { Core as WalletConnectCore } from \"./core\";\r\n\r\nexport * from \"./constants\";\r\nexport * from \"./controllers\";\r\n\r\nexport const Core = WalletConnectCore;\r\nexport default WalletConnectCore;\r\n"],"names":["fromString","from","basex","decode","encode","identity","varint","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","base64","base256emoji","bases","ONE_DAY","SIX_HOURS","THIRTY_DAYS","FIVE_SECONDS","THIRTY_SECONDS","VERIFY_SERVER_COM","VERIFY_SERVER_ORG","core","logger","KEYCHAIN_CONTEXT","KEYCHAIN_STORAGE_VERSION","CORE_STORAGE_PREFIX","keychain","tag","key","message","getInternalError","generateChildLogger","getLoggerContext","mapToObj","objToMap","CRYPTO_CONTEXT","generateRandomBytes32","seed","keyPair","relayAuth","generateKeyPairUtil","aud","sub","ttl","CRYPTO_JWT_TTL","selfPublicKey","peerPublicKey","overrideTopic","selfPrivateKey","symKey","deriveSymKey","topic","hashKey","publicKey","payload","opts","params","validateEncoding","safeJsonStringify","isTypeOneEnvelope","type","senderPublicKey","encrypt","encoded","validateDecoding","decrypt","safeJsonParse","error","deserialized","deserialize","decodeTypeByte","toString","BASE16","KeyChain","privateKey","CRYPTO_CLIENT_SEED","e","IMessageTracker","MESSAGES_CONTEXT","MESSAGES_STORAGE_VERSION","messages","hash","hashMessage","IPublisher","relayer","EventEmitter","PUBLISHER_CONTEXT","toMiliseconds","ONE_MINUTE","ONE_SECOND","_a","PUBLISHER_DEFAULT_TTL","relay","getRelayProtocolName","prompt","id","getBigIntRpcId","failedPublishMessage","startPublish","result","attempts","createExpiringPromise","resolve","RELAYER_EVENTS","event","listener","_b","_c","_d","request","getRelayProtocolApi","isUndefined","HEARTBEAT_EVENTS","ids","remaining","x","ISubscriber","SubscriberTopicMap","SUBSCRIBER_CONTEXT","SUBSCRIBER_STORAGE_VERSION","label","reject","watch","Watch","interval","PENDING_SUB_RESOLUTION_TIMEOUT","reason","getSdkError","err","subscriptions","s","__spreadProps","__spreadValues","subscription","SUBSCRIBER_EVENTS","numOfBatches","i","batch","persisted","isValidArray","response","pendingSubscriptions","createdEvent","eventName","deletedEvent","IRelayer","RELAYER_CONTEXT","requestPromise","onDisconnect","RELAYER_PROVIDER_EVENTS","res","isNode","pino","getDefaultLoggerOptions","RELAYER_DEFAULT_LOGGER","MessageTracker","Subscriber","Publisher","RELAYER_DEFAULT_RELAY_URL","getBundleId","RELAYER_TRANSPORT_CUTOFF","resolvePromise","onSubCreated","relayUrl","isOnline","sortedMessages","a","b","_e","auth","JsonRpcProvider","WsConnection","formatRelayRpcUrl","RELAYER_SDK_VERSION","messageEvent","exists","isJsonRpcRequest","RELAYER_SUBSCRIBER_SUFFIX","publishedAt","isJsonRpcResponse","formatJsonRpcResult","lastConnectedState","subscribeToNetworkChange","connected","RELAYER_RECONNECT_TIMEOUT","n","u","h","IStore","name","storagePrefix","getKey","STORE_STORAGE_VERSION","value","isProposalStruct","isSessionStruct","filter","isEqual","update","PAIRING_CONTEXT","PAIRING_STORAGE_VERSION","TYPE_1","methods","expiry","calcExpiry","FIVE_MINUTES","RELAYER_DEFAULT_PROTOCOL","pairing","uri","formatUri","expiryTimestamp","parseUri","existingPairing","PAIRING_EVENTS","done","createDelayedPromise","engineEvent","metadata","method","formatJsonRpcRequest","PAIRING_RPC_OPTS","record","formatJsonRpcError","expirerHasDeleted","expiredPairings","isExpired","resMethod","_topic","isJsonRpcResult","isJsonRpcError","isValidParams","isValidUrl","isValidString","Store","EXPIRER_EVENTS","parseExpirerTarget","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","chainId","HISTORY_EVENTS","requests","requestEvent","records","deleted","IExpirer","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","expiration","target","formatTopicTarget","formatIdTarget","expirations","expiredEvent","IVerify","projectId","VERIFY_CONTEXT","isReactNative","isBrowser","verifyUrl","attestationId","url","timeout","iframeOnLoadResolve","onMessage","existingIframe","iframe","_","VERIFY_SERVER","TRUSTED_VERIFY_URLS","timer","IEchoClient","ECHO_CONTEXT","clientId","token","notificationType","enableEncrypted","echoUrl","ECHO_URL","fetch","Core","ICore","CORE_PROTOCOL","CORE_VERSION","CORE_CONTEXT","RELAYER_FALLBACK_RELAY_URL","loggerOptions","CORE_DEFAULT","chunkLoggerController","generatePlatformLogger","HeartBeat","Crypto","JsonRpcHistory","Expirer","KeyValueStorage","CORE_STORAGE_OPTIONS","Relayer","Pairing","Verify","EchoClient","WALLETCONNECT_CLIENT_ID","WalletConnectCore"],"mappings":"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"}